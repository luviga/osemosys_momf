# MOMF Tier 3a for Manager and FRM files build parameterization yaml file

# Model external dependencies: Directories, Files, sheets and columns
########################################################################################
# Directories
Futures: './Experimental_Platform/Futures/'
From_Confection: './0_From_Confection/'
Base_Model: '1_Baseline_Modelling'
results: 'Experimental_Platform\\Futures\\'

# Input File Classifier Modes transport
# File (First letter of the word y uppercase)
Modes_Trans: './0_From_Confection/A-I_Classifier_Modes_Transport.xlsx'
# Sheets (First letter of the word y uppercase)
Fuel_Code: 'Fuel_to_Code'
Tech_Code: 'Tech_to_Code'
# B1 Model Structure
# File
B1_model_Struct: 'B1_Model_Structure.xlsx'
# Experiment Manager Script
# File
Manager: 'experiment_manager.py'
# FRM Cleanup script
# File
FRM_clean: 'FRM_cleanup.py'
# OSeMOSYS Model
# File
OSeMOSYS_Model: 'OSeMOSYS_Model.txt'
# Pickle Fleet Group
# File
Fleet_Group: './0_From_Confection/A-O_Fleet_Groups.pickle'
# Pickle Fleet Group Distance
# File
Fleet_Group_Dist: './0_From_Confection/A-O_Fleet_Groups_Distance.pickle'
# Pickle Fleet Group OR
# File
Fleet_Group_OR: './0_From_Confection/A-O_Fleet_Groups_OR.pickle'
# Pickle Fleet Group T2D
# File
Fleet_Group_T2D: './0_From_Confection/A-O_Fleet_Groups_T2D.pickle'
# Pickle GDP dictionary
# File
GDP_dict: 'GDP_dict.pickle'
# Pickle reference driven distance
# File
Ref_Dri_Dist: 'reference_driven_distance.pickle'
# Pickle reference occupancy rate
# File
Ref_Occu_Rate: 'reference_occupancy_rate.pickle'
# Experiment Dictionary
# File
Exper_Dict: 'experiment_dictionary.pickle'
# Belnde Shares 0
# File
Blend_Shares: 'Blend_Shares_0.pickle'
# GDP REF
# File
GDP_REF: '_GDP_Ref.xlsx'
# Sheets
GDP: 'GDP'
Elast: 'Elasticities'
Inten: 'Intensities'
GDP_Growth: 'GDP_Growth'
# Experiment Setup
# File
Exper_Setup: '_Experiment_Setup.xlsx'
# Uncertainty Table
# File
Uncer_Table: 'Uncertainty_Table.xlsx'
# B1 Default Parameters
# File
B1_Default_Param: './0_From_Confection/B1_Default_Param.xlsx'
########################################################################################

################################# Variable definitions #################################
# Configuration variables
#----------------------------------------------------------------------------------#
# Start command line
start: 'start cmd.exe /k cd '

# Solver
solver: 'cplex' # Could you use 'glpk', 'cbc' or 'cplex'

# For GLPK use
glpk_option: 'new' # Could you use 'old' for the first method and 'new' for method with otoole incorporate 

# Choose if want to delete or not the solver solutions files
del_files: True

# Maximun cores to use per iteration
Number_of_Runs: 40
Scenario_to_Reproduce: 'All'
Initial_Future_to_Print: 1
Final_Future_to_Print: 10
Initial_Year_of_Uncertainty: 2022
Experiment_ID: 1
max_x_per_iter: 20

# Choose if want run script in parallel or not
parallel: True

# Control inputs
generator_or_executor: 'Both' # options: 'Both', 'None', 'Generator', 'Executor'
inputs_txt_csv: 'Both' # 'Both', 'csv'

# Scenarios
#--------------------------------------------------------------------------------------------------------------------#
BAU: 'BAU'
NDP: 'NDP'
#--------------------------------------------------------------------------------------------------------------------#

# Years variables
#----------------------------------------------------------------------------------#
# Base year
base_year: 2021
R_base_year: 'R2021' 
# r_base_year_max == r2021max Do not uncommented, this is a variable defined at the script

base_year_2: 2018 # Talk with Luis about this variable

# Changed year
change_year: 2024
# index_change_year == index_2024

# Final year
final_year: 2050
final_year_str: '2050'
R_final_year: 'R2050'
v_final_year: 'v_2050'
# v_final_year == 'v_2050' Do not uncommented, this is a variable defined at the script
# r_final_year == r2050
# the_final_year_value == the_2050_value
# the_final_year_value_raw == the_2050_value_raw
#----------------------------------------------------------------------------------#

# Data Processor function
#----------------------------------------------------------------------------------#
S_DICT_sets_structure: {
  set: [],
  initial: [],
  number_of_elements: [],
  elements_list: []
  }

S_DICT_params_structure: {
  category: [],
  parameter: [],
  number_of_elements: [],
  index_list: []
  }

S_DICT_vars_structure: {
  category: [],
  variable: [],
  number_of_elements: [],
  index_list: []
  }

all_vars: [
  'Demand',
  'NewCapacity',
  'AccumulatedNewCapacity',
  'TotalCapacityAnnual',
  'TotalTechnologyAnnualActivity',
  'ProductionByTechnology',
  'UseByTechnology',
  'CapitalInvestment',
  'DiscountedCapitalInvestment',
  'SalvageValue',
  'DiscountedSalvageValue',
  'OperatingCost',
  'DiscountedOperatingCost',
  'AnnualVariableOperatingCost',
  'AnnualFixedOperatingCost',
  'TotalDiscountedCostByTechnology',
  'TotalDiscountedCost',
  'AnnualTechnologyEmission',
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  'AnnualEmissions'
  ]

more_vars: [
  'DistanceDriven',
  'Fleet',
  'NewFleet',
  'ProducedMobility'
  ]

filter_vars: [ # this list is for B1 parallel file
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex2021', # CapitalInvestment
  'FixedOpex2021', # AnnualFixedOperatingCost
  'VarOpex2021', # AnnualVariableOperatingCost
  'Opex2021', # OperatingCost
  'Externalities2021', # AnnualTechnologyEmissionPenaltyByEmission
  #
  'Capex_GDP', # CapitalInvestment
  'FixedOpex_GDP', # AnnualFixedOperatingCost
  'VarOpex_GDP', # AnnualVariableOperatingCost
  'Opex_GDP', # OperatingCost
  'Externalities_GDP' # AnnualTechnologyEmissionPenaltyByEmission
  ]

output_header: ['Strategy', 'Future.ID', 'Fuel', 'Technology', 'Emission', 'Year']
#----------------------------------------------------------------------------------#

# Function C Mathprog Parallel
#----------------------------------------------------------------------------------#
header_indices: ['Scenario','Parameter','r','t','f','e','m','l','y','ls','ld','lh','s','value']

basic_header_elements: ['Future.ID', 'Strategy.ID', 'Strategy', 'Fuel', 'Technology', 'Emission', 'Season', 'Year']

parameters_to_print: [
  'SpecifiedAnnualDemand',
  'CapacityFactor',
  'OperationalLife',
  'ResidualCapacity',
  'InputActivityRatio',
  'OutputActivityRatio',
  'EmissionActivityRatio',
  'CapitalCost',
  'VariableCost',
  'FixedCost',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMinCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyAnnualActivityLowerLimit'
  ]

more_params: [
  'DistanceDriven',
  'UnitCapitalCost (USD)',
  'UnitFixedCost (USD)',
  'BiofuelShares'
  ]

filter_params: [
  'FilterFuelType',
  'FilterVehicleType'
  ]
#----------------------------------------------------------------------------------#

expand_plants: ['PPPVT', 'PPWNDON', 'PPPVDS']

################################# PART 2 #################################
# 2.B Read all the base scenarios
#----------------------------------------------------------------------------------#
header_row: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION',
  'MODE_OF_OPERATION','TIMESLICE','YEAR','SEASON','DAYTYPE',
  'DAILYTIMEBRACKET','STORAGE','Value'
  ]

Techs_Emissions: {
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ],
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

except_techs: [
  'Techs_SUVMIV', 'Techs_Sedan', 'Techs_Motos', 'Techs_Buses',
  'Techs_Microbuses', 'Techs_Taxis'
  ]

except_scen: ['NDP']

params_to_adjust: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']

Sets_Involved: [
  'T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI',
  'T4DSL_PUB', 'T4GSL_LIG', 'T4GSL_PRI',
  'T4GSL_PUB', 'DIST_GSL'
  ]
#----------------------------------------------------------------------------------#

################################# PART 3 #################################
# 3.B Implementing the orderly manipulation
#----------------------------------------------------------------------------------#
Blend_Shares_dict: {
  NDP: {},
  NDPTh: {},
  NDPWOS: {},
  NDPWOSTh:{}
  }
#----------------------------------------------------------------------------------#
########################################################################################

################################# Conditions #################################
trains: 'Trains'
tech_train: 'Techs_Trains'
this_combina: ['Accidents', 'Health', 'Congestion']
PRI: 'PRI'
PUB: 'PUB'
FEAHEA: 'FREHEA'
FRELIG: 'FRELIG'
tech_train_fre: 'Techs_Trains_Freight'
tech_he_fre: 'Techs_He_Freight'
fre: 'Freight'
tr: 'TR'
cap_vars_cond_2: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']
techs_: 'Techs_'
gen_or_exe_1: 'Generator'
gen_or_exe_2: 'Both'
gen_or_exe_3: 'Executor'
gen_or_exe_4: 'Both'
KKT: 'Karush-Kuhn-Tucker'
motos: 'Motos'
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost']
down: 'down'
up: 'up'
exp_param_rel_base: 'Explored_Parameter_is_Relative_to_Baseline'
year_when_rea_zero: 'Year_when_reaches_zero'
cte: 'Constant'
ble_time_series: 'Blend_Time_Series'
_base_data: '_Base_Dataset'
_backup: '_BACKUP'
exper: 'Experiment'
pass_dem: 'Passenger Demand'
x_cat_list: ['Electrical Demand', 'Fuel Demand', 'Freight Demand']
fre_dem: 'Freight Demand'
ele_dem: 'Electrical Demand'
fuel_dem: 'Fuel Demand'
rail_dem: 'Rail Demand'
mode_shift: 'Mode Shift'
pub_tra_dis: 'Public Transport Distribution'
techs_motos: 'Techs_Motos'
techs_sedan: 'Techs_Sedan'
techs_taxis: 'Techs_Taxis'
techs_bus: 'Techs_Buses'
techs_mibus: 'Techs_Microbuses'
ini_val: 'Initial_Value'
fin_val: 'Final_Value'
shift_per_ini_val: 'Shift_as_percent_of_Initial_Value'
dis: 'Distance'
dem: 'Demand'
non_rail: 'Non-Rail'
adj_oar: 'Adjustment OAR'
acci: 'Accidents'
electri: 'Electrification'
pen: 'Penetration'
this_set: ['TRBUSHYD', 'TRMBUSHYD', 'TRYTKHYD']
TRBUSHYD: 'TRBUSHYD'
TRBUSELE: 'TRBUSELE'
TRMBUSHYD: 'TRMBUSHYD'
TRMBUSELE: 'TRMBUSELE'
TRYTKHYD: 'TRYTKHYD'
TRYTKELE: 'TRYTKELE'
##############################################################################

################################# General Var #################################
newfleet: 'NewFleet'
externa_base_year: 'Externalities2021'
externa_gdp: 'Externalities_GDP'
capex_base_year: 'Capex2021'
capex_gdp: 'Capex_GDP'
fopex_base_year: 'FixedOpex2021'
fopex_gdp: 'FixedOpex_GDP'
vopex_base_year: 'VarOpex2021'
vopex_gdp: 'VarOpex_GDP'
opex_base_year: 'Opex2021'
opex_gdp: 'Opex_GDP'
biofuel_shares: 'BiofuelShares'
fleet: 'Fleet'
dist_driven: 'DistanceDriven'
produced_mob: 'ProducedMobility'
filt_fuel_type: 'FilterFuelType'
filt_veh_type: 'FilterVehicleType'
tra_dem_pub: 'E6TDPASPUB' # Transport Demand - Passenger Public
tra_dem_pri: 'E6TDPASPRI' # Transport Demand - Passsenger Private
tra_dem_hea: 'E6TDFREHEA' # Transport Demand - Heavy Freight
tra_dem_lig: 'E6TDFRELIG' # Transport Demand - Light Freight
tra_non_mot: 'E6TRNOMOT' # Transport Non Motorize
uni_capex: 'UnitCapitalCost (USD)'
uni_fopex: 'UnitFixedCost (USD)'
num_runs: 'Number_of_Runs'
xlrm_id: 'XLRM_ID'
x_math__type: 'X_Mathematical_Type'
exp_param_x: 'Explored_Parameter_of_X'
inv_scen: 'Involved_Scenarios'
inv_sets_ose: 'Involved_Sets_in_Osemosys'
exac_param_inv_ose: 'Exact_Parameters_Involved_in_Osemosys'
x_pla_eng_desc: 'X_Plain_English_Description'
x_num: 'X_Num'
x_cat: 'X_Category'
exp_param_num: 'Explored_Parameter_Number'
min_val: 'Min_Value'
max_val: 'Max_Value'
dep_pre_exp_param: 'Dependency_on_Previous_Explored_Parameter'
sing_dep_spe_xs: 'Sign_Dependency_on_Specified_Xs'
fut_var: 'Futures'
dis_invs: 'Discrete_Investments'
time_series: 'Time_Series'
adop_curve: 'Adoption_Curve'
ini_year: 'Initial_Year'
exact_x: 'Exact_X'
Cat: 'Category'
math_type: 'Math_Type'
rel_base: 'Relative_to_Baseline'
e_pass: 'e_Passenger'
e_fre: 'e_Freight'
i_nt_ele: 'i_NT_elec'
i_nt_fossil: 'i_NT_fossil'
##############################################################################