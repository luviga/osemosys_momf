# MOMF Tier 3b for t3f's files build parameterization yaml file

# Model external dependencies: Directories, Files, sheets and columns
########################################################################################
# Directories
Analysis: './Analysis_'

# Prim Strucutre
# File (First letter of the word y uppercase)
Prim_Struc: '/prim_structure.xlsx'
# Sheets (First letter of the word y uppercase)
Set_Mat_4: 'Set_Matching_4_Param_Mult'
# Columns (First letter of the word y lowercase)
# Pickle Prim Files Creator
# File
Prim_Crea: '/prim_files_creator.pickle'
# SD_Manager
# File
SD_Man: 'sd_manager.txt'
# Prim Structures
# File
Prim_Struc: '/prim_structure.xlsx'
# Sheets
Seq: 'Sequences'
# t3f4 Prdominant Ranges
# File
Pre_Domi: 't3f4_predominant_ranges'
# t3f4 Prdominant Ranges a1 e2
# File
Pre_Domin_Ranges_a1_e2: 't3f4_predominant_ranges_a1_e2.xlsx'
# Subtbl ana 7 exp 2
# File
Sub_ana_7_exp_2: 'subtbl_ana_7_exp_2.pickle'
# Subtbl ana 1 exp 1
# File
Sub_ana_1_exp_1: 'subtbl_ana_1_exp_1.pickle'
# Validation analysis output
# File
Val_Ana_out: 't3f6_validation_analysis_output.xlsx'
# Validation analysis input
# File
Val_Ana_inp: 't3f6_validation_analysis_inputs.xlsx'
########################################################################################

################################# Variable definitions #################################

# Configuration
#----------------------------------------------------------------------------------#
list_exp_iter: [1]
list_exp_iter_man_vali: [2]
ana_id: 1
exp_id: 1
developing_phase: True
list_ana_iter_int: [7]
list_ana_iter_int_man: [1]
bug_acts: False
bug_acts_1: False
bug_acts_2: False
#----------------------------------------------------------------------------------#

# Scenarios
#----------------------------------------------------------------------------------#
NDP: 'NDP'
wrt_BAU: 'wrtBAU'
direct: 'direct'
#----------------------------------------------------------------------------------#

# frml_ind_2_colinfo function
#----------------------------------------------------------------------------------#
col_title_suff_set: ['_LowEmissions', '_HighEmissions']

col_title_suff_set_2: ['_H2', '_elec', '_fossil']

col_title_suff_set_3: ['_biodiesel', '_ethanol']

col_title_suff_set_4: ['_public', '_nonmot']

col_title_suff_set_5: ['_rail']

col_title_suff_set_6: ['_bus', '_minibus', '_taxi']

col_sets_special_Biofuel: ['NDP then T4DSL_HEA then CO2e', 'NDP then T4GSL_PRI then CO2e']

col_sets_special_mode_shift: ['E6TDPASPUB', 'E6TRNOMOT']

col_sets_special_freight_shift: ['Techs_Trains_Freight']

col_sets_special_PT_dist: ['Techs_Buses', 'Techs_Microbuses', 'Techs_Taxis']

column_namer_variable_Management: {Direct: '_direct', wrt_BAU_excess: '_wrtBAU'}
#----------------------------------------------------------------------------------#

# 1.1 Create implementation loop
#----------------------------------------------------------------------------------#
prim_fc_p: {Outcome: {}, Driver: {}, Driver_U: {}}

prim_manager: {Outcome: {}, Driver: {}}  # order-dependent

dict_4_update: {Num_drivers: 0, Num_driver_cols: 0, Num_outcomes: 0, Num_outcome_cols: 0}

dict_4_update_1: {Name: [], Cols: [], Threshold: []}

dict_4_update_2: {Name: [], Cols: []}

#----------------------------------------------------------------------------------#

# f1_prim_box_execute function
#----------------------------------------------------------------------------------#
num_thr_dict: {
  high: 75, mid: 50, low: 25, zero: 0,
  high40: 40, high60: 60, high25: 25,
  low40: 40, low60: 60, low75: 75
  }

type_thr_dict: {
  high: ">", mid: ">", low: "<", zero: "<",
  high40: ">", high60: ">", high25: ">",
  low40: "<", low60: "<", low75: "<"
  }

#----------------------------------------------------------------------------------#

# Main from f1 to f3
#----------------------------------------------------------------------------------#
period_list: [ 
  '22-30',
  '22-35',
  '31-50',
  '31-40',
  '41-50',
  '25-30',
  '31-35',
  '36-40',
  '41-45',
  '46-50'
  ]

keys_IDs: ['Fut_ID', 'Run_Strat_ID', 'Scenario', 'Strat_ID']

dict_large_table: {Fut_ID: [], Run_Strat_ID: [], Scenario: [], Strat_ID: []}

rep_csv: {
  block: [], o_id: [], outcome: [],
  level: [], o1_fam: [], o1_col: [],
  o2_fam: [], o2_col: [],
  family: [], column: [],
  period: [], base_thr: [],
  thr_type: [], thr_range: [], thr_value: [],
  thr_value_norm: [], prim_option: [],
  coverage: [], density: [], avg_cov_dev: [],
  driver_col: [], min: [], max: [],
  min_norm: [], max_norm: [],
  query_type: []
  }

oc_names: ['pure_direct', 'pure_wrtBAU']

oc_names_1: ['pure_wrtBAU']

oc_names_2: ['pure_direct']

oc_names_3: ['pure_direct', 'disag_direct', 'pure_wrtBAU', 'disag_wrtBAU']

oc_names_4: ['pure_wrtBAU', 'disag_wrtBAU']

oc_names_5: ['pure_direct', 'disag_direct']

dc_names: ['pure_direct', 'pure_wrtBAU']

dc_names_1: ['pure_wrtBAU']

dc_names_2: ['pure_direct']

dc_names_3: ['pure_direct', 'disag_direct', 'pure_wrtBAU', 'disag_wrtBAU']

dc_names_4: ['pure_wrtBAU', 'disag_wrtBAU']

dc_names_5: ['pure_direct', 'disag_direct']
#----------------------------------------------------------------------------------#

# Step 1) call the results data
#----------------------------------------------------------------------------------#
sd_cols: [
  'block', 'o_id', 'outcome', 'level', 'o1_fam', 'o1_col',
  'o2_fam', 'o2_col', 'family', 'column', 'period', 'base_thr',
  'thr_type', 'thr_range', 'thr_value', 'thr_value_norm', 'prim_option',
  'coverage', 'density', 'avg_cov_dev', 'driver_col', 'min', 'max',
  'min_norm', 'max_norm', 'query_type'
  ]

desirable_outcomes: {
  Benefit: 'high',
  Emissions National: 'low',
  CAPEX: 'low',
  Bus Price: 'low',
  Electricity price: 'low'
  }
risk_outcomes: {
  Benefit: 'low',
  Emissions National: 'high',
  CAPEX: 'high',
  Bus Price: 'high',
  Electricity price: 'high'
  }

general_u_keys: [
  'drivers', 'drivers_max_norm', 'drivers_min_norm',
  'case', 'condition', 'tiebreaker', 'driver_type',
  'store_uncertainty_driver_data',
  'store_intermediary_driver_data'
  ]

outcome_type_list: ['desirable', 'risk']

df_ranges_cols: [
  'Outcome_Type', 'Metric', 'Period', 'Driver',
  'Driver_Type', 'Max_Norm', 'Min_Norm', 'Case',
  'Condition', 'Tiebreaker'
  ]

except_cols: ['Fut_ID', 'Run_Strat_ID', 'Scenario', 'Strat_ID']

desirable_outcomes_num: {
  Benefit: 'high_75',
  Emissions National: 'low_25',
  CAPEX: 'low_25',
  Bus Price: 'low_25',
  Electricity price: 'low_25'
  }

risk_outcomes_num: {
  Benefit: 'low_25',
  Emissions National: 'high_75',
  CAPEX: 'high_75',
  Bus Price: 'high_75',
  Electricity price: 'high_75'
  }

validation_columns: [
  'Outcome_Type',
  'Metric',
  'Period',
  'Driver',
  'Driver_Type',
  'Group',
  'Sensitivity',
  'Metric space (# futures)',
  'Strategy space (# futures)',
  'Coverage',
  'Density',
  'Metric space (ratio)',
  'Strategy space (ratio)'
  ]

i_metric_add_alls: ['All-1', 'All-2', 'All-3']

sensitivities_list: [
  '25%', '40%', '50%', '60%', '65%', '70%', '75%',
  '80%', '85%', '90%', '95%'
  ]

first_time_dict: {
  thr_val: [],
  thr_val_norm: [],
  dir: []
  }
#----------------------------------------------------------------------------------#
########################################################################################

################################# Conditions #################################
col_mngmt_ele_1: 'Str_Both_4 and 5 : Energy'
col_mngmt_ele_2: 'Str_Only_4 : Transport'
col_mngmt_ele_3: 'column_per_param'
col_mngmt_ele_4: 'column_per_set'
col_mngmt_ele_5: 'group_by_fuel'
col_mngmt_ele_6: 'group_by_type'
col_mngmt_ele_7: 'group_by_type_and_LowHighEmissions'
col_mngmt_ele_8: 'group_by_use'
col_mngmt_ele_9: 'group_fossil_elec_H2'
col_mngmt_ele_10: 'none' 
col_mngmt_ele_11: 'special_Biofuel'
col_mngmt_ele_12: 'special_mode_shift'
col_mngmt_ele_13: 'special_freight_shift'
col_mngmt_ele_14: 'special_PT_dist'
frml_dem_elmnts_1: 'Den_GDP'
frml_dem_elmnts_2: 'none'
frml_dem_elmnts_3: 'tracost_at2019'
frml_dem_elmnts_4: 'totcost_at2019'
frml_num_elmnts_1: 'GDP_growth'
frml_num_elmnts_2: 'average_across'
frml_num_elmnts_3: 'average_across_rel2018'
frml_num_elmnts_4: 'direct'
frml_num_elmnts_5: 'cumulative'
frml_num_elmnts_6: 'direct_rel2018'
frml_num_elmnts_7: 'multiply_sum_across'
frml_num_elmnts_8: 'share_H2_of_total'
frml_num_elmnts_9: 'share_ZEV_of_total'
frml_num_elmnts_10: 'share_LPG_of_total'
frml_num_elmnts_11: 'share_electric_of_total'
frml_num_elmnts_12: 'special_elasticity'
frml_num_elmnts_13: 'special_FiscalCost'
frml_num_elmnts_14: 'special_FiscalCost_combine_set_type'
frml_num_elmnts_15: 'sum_across'
frml_num_elmnts_16: 'special_ussolarprod'
frml_num_elmnts_17: 'special_disolarprod'
frml_num_elmnts_18: 'special_windprod'
frml_num_elmnts_19: 'special_gencost'
frml_num_elmnts_20: 'special_t&dcost'
frml_num_elmnts_21: 'special_powersectorcost'
frml_num_elmnts_22: 'sum_across_combine_set_type'
frml_num_elmnts_23: 'sum_across_rel2018'
frml_num_elmnts_24: 'special_EaseImp'
frml_num_elmnts_25: 'special_ExtMng'
des: 'desirable'
mod_shi_1: 'Mode shift_'
mod_shi_2: 'Mode shift '
mod_shi_3: 'Mode shift'
mod_shi_4: 'Mode shift public' 
mod_shi_5: 'Mode shift nonmot' 
##############################################################################

################################# General Vars #################################
inter: 'intermediary'
Inter: 'Intermediary'
uncer: 'uncertainty'
Uncer: 'Uncertainty'
met_int: 'Metric of interest'
high_una: 'high_unanimous'
low_una: 'low_unanimous'
high_pre: 'high_predominant'
low_pre: 'low_predominant'
direction_content_1: 'tie'
direction_content_2: ['high_unanimous', 'low_unanimous']
direction_content_3: ['high_predominant', 'low_predominant']
range_content_1: 'within'
range_content_2: 'outside'
range_content_3: 'one_sided'
range_content_4: 'strange'
range_content_5: ['within', 'strange']
range_content_6: ['outside']
range_content_7: ['one_sided']
this_condition_1: 'definitive'
this_condition_2: 'trade-off'
this_condition_3: 'inclusive'
this_tiebreaker: 'high/low average'
this_tiebreaker_2: 'none'
high: 'high'
low: 'low'
################################################################################