# MOMF Tier 1 B1 (normal and parallel files) build parameterization yaml file

#Note:
# em: for experiment_manager

# Model external dependencies: Directories, Files, sheets and columns
########################################################################################
# Directories
Executables: './Executables'
Executables_2: '.\Executables'
Executables_3: 'Executables'
A1_Inputs: './A1_Inputs/'
A1_Outputs: './A1_Outputs/'
A2_Output_Params: './A2_Output_Params/'
B1_Output_Params: './B1_Output_Params/'
outputs: '/Outputs'
config: 'config\\'
templates: 'templates'
Experi_plat: './Experimental_Platform'
Futures: '/Futures/'
futures_2: 'Futures\\'
Futures_3: '\Futures'
Futures_4: 'Futures'
From_Confection: './0_From_Confection/'
Base_Model: '1_Baseline_Modelling'


# Files, sheets and columns
# B1 script 
# File (First letter of the word y uppercase)
B1_script: 'B1_Base_Scenarios.py'
# OSeMOSYS Model
# File
OSeMOSYS_Model: 'OSeMOSYS_Model.txt'
# Sheets (First letter of the word y uppercase)
Fuel_Code: 'Fuel_to_Code'
Tech_Code: 'Tech_to_Code'
# B1 model structure
# File
B1_model_Struct: 'B1_Model_Structure.xlsx'
# GDP REF
# File
GDP_REF: '_GDP_Ref.xlsx'
# Sheets
GDP: 'GDP'
GDP_Growth: 'GDP_Growth'
Elast: 'Elasticities'
Inten: 'Intensities'
# Pikcle Fleet Groups
# File
Pickle_Fleet_Groups: 'A-O_Fleet_Groups.pickle'
# Pickle Fleet Groups Distance
# File
Pickle_Fleet_Groups_Dist: 'A-O_Fleet_Groups_Distance.pickle'
# Pickle Fleet Groups OR
# File
Pickle_Fleet_Groups_OR: 'A-O_Fleet_Groups_OR.pickle'
# Pickle Fleet Groups T2D
# File
Pickle_Fleet_Groups_T2D: 'A-O_Fleet_Groups_T2D.pickle'
# B1 Scenario Configuration
# File
B1_Scen_Config: 'B1_Scenario_Config.xlsx'
# Sheets
Scens: 'Scenarios'
Over_params: 'Overall_Parameters'
TElas: 'TElasticity'
Dis_Levers: 'Distance_Levers'
Mode_Shift: 'Mode_Shift'
Occu_Rate: 'Occupancy_Rate'
Tech_Adop: 'Tech_Adoption'
Elec: 'Electrical'
Smart_Grid: 'SmartGrid'
Effi: 'Efficiency'
Waste: 'Waste'
# Pickle Blend Shares 0
# File
Blend_Shares_0: 'Blend_Shares_0.pickle'
# Yaml conversion format
# File
conv_format: 'conversion_format.yaml'
# Script to create and change values of the yaml file to use with otoole
# File
otoole_config: change_default_vals_params.py
# Classifier Modes Transport
# File
Modes_Trans: 'A-I_Classifier_Modes_Transport.xlsx'
# Sheets (First letter of the word y uppercase)
Fuel_Code: 'Fuel_to_Code'
Tech_Code: 'Tech_to_Code'
# Experiment Manager Script
# File
Manager: 'experiment_manager.py'
# FRM Cleanup script
# File
FRM_clean: 'FRM_cleanup.py'
# Pickle GDP dictionary
# File
GDP_dict: 'GDP_dict.pickle'
# Pickle reference driven distance
# File
Ref_Dri_Dist: 'reference_driven_distance.pickle'
# Pickle reference occupancy rate
# File
Ref_Occu_Rate: 'reference_occupancy_rate.pickle'
# Experiment Dictionary
# File
Exper_Dict: 'experiment_dictionary.pickle'
# Uncertainty Table
# File
Uncer_Table: 'Uncertainty_Table.xlsx'
# Broad output dataset creator f
# File 
Bro_out_dat_cre: 'Broad_Output_Dataset_Creator_f.py'
# Output Dataset 0
# File
Out_dat_0: '\output_dataset_0.csv'
# Output Dataset f
# File
Out_dat_f: '\output_dataset_f.csv'
# Input Dataset 0
# File
In_dat_0: '\input_dataset_0.csv'
# Input Dataset f
# File
In_dat_f: '\input_dataset_f.csv'
# OSeMOSYS CR Input
# File
ose_cou_in: 'OSMOSYS_CR_Input'
# OSeMOSYS CR Output
# File
ose_cou_out: 'OSMOSYS_CR_Output'
########################################################################################

################################# Variable definitions #################################
# Configuration variables
#----------------------------------------------------------------------------------#
# Results folder
results: 'Executables\\'

# Start command line
start: 'start cmd.exe /k cd '

# Solver
solver: 'cplex' # Could you use 'glpk', 'cbc' or 'cplex'

# For GLPK use
glpk_option: 'new' # Could you use 'old' for the first method and 'new' for method with otoole incorporate 

# Choose if want to delete or not the solver solutions files
del_files: True

# Maximun cores to use per iteration
Number_of_Runs: 2
Scenario_to_Reproduce: 'All'
Initial_Future_to_Print: 1
Final_Future_to_Print: 10
Initial_Year_of_Uncertainty: 2022
Experiment_ID: 1
max_x_per_iter: 2

# Choose if want run script in parallel or not
parallel: True

# Control inputs
is_this_last_update: True
generator_or_executor: 'Both' # options: 'None', 'Generator', 'Executor'
inputs_txt_csv: 'Both' # 'Both', 'csv'

# Country
coun_initial: 'CR'

output_csv_r: 0.05

adjust_fre_rai: True

check_assignation: False

# Sectors variables
Use_Waste: False
Use_Transport: True
Use_AFOLU: True
Use_PIUP: False

# Scenarios
#--------------------------------------------------------------------------------------------------------------------#
BAU: 'BAU'
NDP: 'NDP'
DDP: 'DDP'
#--------------------------------------------------------------------------------------------------------------------#

# Years variables
#----------------------------------------------------------------------------------#
# Base year
base_year: 2021
R_base_year: 'R2021' 
# R_base_year == R2021 Do not uncommented, this is a variable defined at the script
# r_base_year_max == r2021max Do not uncommented, this is a variable defined at the script
base_year_2: 2018 # Talk with Luis about this variable
base_year_3: 2019 # Talk with Luis about this variable
base_year_4: 2020 # Talk with Luis about this variable
base_year_5: 2022 # Talk with Luis about this variable

# Changed year
change_year: 2024
# driven_distance_change_year == driven_distance_2024 Do not uncommented, this is a variable defined at the script
# index_change_year == index_2024
change_year_2: 2026 # Talk with Luis about this variable

# Final year
final_year: 2050
final_year_str: '2050'
R_final_year: 'R2050'
v_final_year: 'v_2050'
# v_final_year == 'v_2050' Do not uncommented, this is a variable defined at the script
# R_final_year == R2050
# r_final_year == r2050
# float_v_final_year == float_v2050
# the_final_year_value == the_2050_value
# the_final_year_value_raw == the_2050_value_raw

first_decade_year: 2030 # Talk with Luis about this variable
v_first_decade_year: 'v_2030' # Talk with Luis about this variable
# v_first_decade_year == 'v_2030' Do not uncommented, this is a variable defined at the script
# float_v_first_decade_year == float_v2030

sec_decade_year: 2040 # Talk with Luis about this variable
v_sec_decade_year: 'v_2040' # Talk with Luis about this variable
# v_sec_decade_year == 'v_2040' Do not uncommented, this is a variable defined at the script
# float_v_sec_decade_year == float_v2040
#----------------------------------------------------------------------------------#

# General values
#----------------------------------------------------------------------------------#
default_val_params: {
  AccumulatedAnnualDemand: 0,
  AnnualEmissionLimit: 99999,
  AnnualExogenousEmission: 0,
  AvailabilityFactor: 1,
  CapacityFactor: 1,
  CapacityOfOneTechnologyUnit: 0,
  CapacityToActivityUnit: 1,
  CapitalCost: 0.0001,
  CapitalCostStorage: 0,
  Conversionld: 0,
  Conversionlh: 0,
  Conversionls: 0,
  DaySplit: 0.00137,
  DaysInDayType: 7,
  DepreciationMethod: 1,
  DiscountRate: 0.05,
  EmissionActivityRatio: 0,
  EmissionsPenalty: 0,
  FixedCost: 0,
  InputActivityRatio: 0,
  MinStorageCharge: 0,
  ModelPeriodEmissionLimit: 99999,
  ModelPeriodExogenousEmission: 0,
  OperationalLife: 1,
  OperationalLifeStorage: 1,
  OutputActivityRatio: 0,
  REMinProductionTarget: 0,
  RETagFuel: 0,
  RETagTechnology: 0,
  ReserveMargin: 0,
  ReserveMarginTagFuel: 0,
  ReserveMarginTagTechnology: 0,
  ResidualCapacity: 0,
  ResidualStorageCapacity: 0,
  SpecifiedAnnualDemand: 0,
  SpecifiedDemandProfile: 0,
  StorageLevelStart: 0,
  StorageMaxChargeRate: 0,
  StorageMaxDischargeRate: 0,
  TechnologyFromStorage: 0,
  TechnologyToStorage: 0,
  TotalAnnualMaxCapacity: 99999,
  TotalAnnualMaxCapacityInvestment: 99999,
  TotalAnnualMinCapacity: 0,
  TotalAnnualMinCapacityInvestment: 0,
  TotalTechnologyAnnualActivityLowerLimit: 0,
  TotalTechnologyAnnualActivityUpperLimit: 99999,
  TotalTechnologyModelPeriodActivityLowerLimit: 0,
  TotalTechnologyModelPeriodActivityUpperLimit: 99999,
  TradeRoute: 0,
  VariableCost: 0.0001,
  YearSplit: 0
  }
#----------------------------------------------------------------------------------#

# Data Processor function
#----------------------------------------------------------------------------------#
all_vars: [
  'Demand',
  'NewCapacity',
  'AccumulatedNewCapacity',
  'TotalCapacityAnnual',
  'TotalTechnologyAnnualActivity',
  'ProductionByTechnology',
  'UseByTechnology',
  'CapitalInvestment',
  'DiscountedCapitalInvestment',
  'SalvageValue',
  'DiscountedSalvageValue',
  'OperatingCost',
  'DiscountedOperatingCost',
  'AnnualVariableOperatingCost',
  'AnnualFixedOperatingCost',
  'TotalDiscountedCostByTechnology',
  'TotalDiscountedCost',
  'AnnualTechnologyEmission',
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  'AnnualEmissions'
  ]

more_vars: [
  'DistanceDriven',
  'Fleet',
  'NewFleet',
  'ProducedMobility'
  ]

filter_vars: [ # this list is for B1 parallel file
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex2021', # CapitalInvestment
  'FixedOpex2021', # AnnualFixedOperatingCost
  'VarOpex2021', # AnnualVariableOperatingCost
  'Opex2021', # OperatingCost
  'Externalities2021', # AnnualTechnologyEmissionPenaltyByEmission
  #
  'Capex_GDP', # CapitalInvestment
  'FixedOpex_GDP', # AnnualFixedOperatingCost
  'VarOpex_GDP', # AnnualVariableOperatingCost
  'Opex_GDP', # OperatingCost
  'Externalities_GDP' # AnnualTechnologyEmissionPenaltyByEmission
  ]

filter_vars_2: [ # this list is for B1 file
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex2021', # CapitalInvestment
  'FixedOpex2021', # AnnualFixedOperatingCost
  'VarOpex2021', # AnnualVariableOperatingCost
  'Opex2021', # OperatingCost
  'Externalities2021' # AnnualTechnologyEmissionPenaltyByEmission
  ]

output_header: ['Strategy', 'Future.ID', 'Fuel', 'Technology', 'Emission', 'Year']
#----------------------------------------------------------------------------------#

# Function C Mathprog Parallel
#--------------------------------------------------------------------------------------------------------------------#
header_indices: ['Scenario','Parameter','r','t','f','e','m','l','y','ls','ld','lh','s','value']

basic_header_elements: ['Future.ID', 'Strategy.ID', 'Strategy', 'Fuel', 'Technology', 'Emission', 'Season', 'Year']

parameters_to_print: [
  'SpecifiedAnnualDemand',
  'CapacityFactor',
  'OperationalLife',
  'ResidualCapacity',
  'InputActivityRatio',
  'OutputActivityRatio',
  'EmissionActivityRatio',
  'CapitalCost',
  'VariableCost',
  'FixedCost',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMinCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyAnnualActivityLowerLimit'
  ]

more_params: [
  'DistanceDriven',
  'UnitCapitalCost (USD)',
  'UnitFixedCost (USD)',
  'BiofuelShares'
  ]

filter_params: ['FilterFuelType', 'FilterVehicleType']
#--------------------------------------------------------------------------------------------------------------------#

# CSV Printer Parallel Function
#--------------------------------------------------------------------------------------------------------------------#
sets: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION',
  'MODE_OF_OPERATION','YEAR','TIMESLICE','SEASON','DAYTYPE',
  'DAILYTIMEBRACKET','STORAGE','Value'
  ]

expand_plants: ['PPPVT', 'PPWNDON', 'PPPVDS']
#--------------------------------------------------------------------------------------------------------------------#

################################# PART 1 #################################
# 1.A Extract the strucute setup of the model based on 'Structure.xlsx'
#--------------------------------------------------------------------------------------------------------------------#

S_DICT_sets_structure: {
  set: [],
  initial: [],
  number_of_elements: [],
  elements_list: []
  }

S_DICT_params_structure: {
  category: [],
  parameter: [],
  number_of_elements: [],
  index_list: []
  }

S_DICT_vars_structure: {
  category: [],
  variable: [],
  number_of_elements: [],
  index_list: []
  }
#--------------------------------------------------------------------------------------------------------------------#

# 1.B Proceed to read all the base scenarios
#--------------------------------------------------------------------------------------------------------------------#
header_row: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','TIMESLICE','YEAR',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#
################################# PART 2 #################################
# 2: Manipulate each scenario for later printing of the .csv files in the same adress
#--------------------------------------------------------------------------------------------------------------------#
capacity_variables: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']

cost_sets_eliminate: ['TRANOMOTBike', 'TRANOMOTWalk', 'TRANPUB', 'TRANRAILINF', 'TRANRAILCAR']

set_list_group_dict: {
  Passenger: ['E6TDPASPRI', 'E6TDPASPUB', 'E6TRNOMOT'],
  Freight: ['E6TDFREHEA', 'E6TDFRELIG']
  }

Sets_Involved: [
  'Techs_He_Freight', 'Techs_Li_Freight', 'Techs_Trains_Freight',
  'Techs_SUVMIV', 'Techs_Sedan', 'Techs_Motos', 'Techs_Buses',
  'Techs_Microbuses', 'Techs_Taxis'
  ]

params_to_adjust: [
  'TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'
  ]

ignore_techs: [
  'TRANRAILFREINF',  'TRANOMOTWalk', 'TRANOMOTBike', 'TRXTRAIELE',
  'TRXTRAIFREELE', 'TRANRAILINF', 'TRANPUB', 'TRANRAILCAR'
  ]

cap_vars: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']

parameters_involved: [
  'CapitalCost','FixedCost','TotalAnnualMaxCapacity',
  'TotalTechnologyAnnualActivityLowerLimit','ResidualCapacity'
  ]

Diesel_Techs: ['T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI', 'T4DSL_PUB']

Diesel_Techs_Emissions: {
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ] 
  }

Gasoline_Techs: ['T4GSL_LIG', 'T4GSL_PRI', 'T4GSL_PUB', 'DIST_GSL']

Gasoline_Techs_Emissions: {
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

basic_header_elements: [
  'Future.ID', 'Strategy.ID', 'Strategy', 'Fuel',
  'Technology', 'Emission', 'Season', 'Year'
  ]

parameters_to_print: [
  'AnnualEmissionLimit',
  'AvailabilityFactor',
  'CapacityFactor',
  'CapacityToActivityUnit',
  'CapitalCost',
  'DepreciationMethod',
  'DiscountRate',
  'EmissionActivityRatio',
  'EmissionsPenalty',
  'FixedCost',
  'InputActivityRatio',
  'ModelPeriodEmissionLimit',
  'OperationalLife',
  'OutputActivityRatio',
  'REMinProductionTarget',
  'ResidualCapacity',
  'RETagFuel',
  'RETagTechnology',
  'SpecifiedAnnualDemand',
  'SpecifiedDemandProfile',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacity',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityLowerLimit',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyModelPeriodActivityLowerLimit',
  'TotalTechnologyModelPeriodActivityUpperLimit',
  'VariableCost',
  'YearSplit'
  ]

blend_shares: {
  NDP: {},
  NDPA: {},
  NDPB: {},
  NDPC: {},
  NDPD: {},
  NDPE: {},
  NDPF: {},
  NDPG: {},
  NDPAlt: {},
  NDPPlus: {}
  }

each_parameter_header: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','YEAR','TIMESLICE',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#

# 2.B Read all the base scenarios
#----------------------------------------------------------------------------------#
header_row_em: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION',
  'MODE_OF_OPERATION','TIMESLICE','YEAR','SEASON','DAYTYPE',
  'DAILYTIMEBRACKET','STORAGE','Value'
  ]

Techs_Emissions: {
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ],
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

except_techs: [
  'Techs_SUVMIV', 'Techs_Sedan', 'Techs_Motos', 'Techs_Buses',
  'Techs_Microbuses', 'Techs_Taxis'
  ]

except_scen: ['NDP']

params_to_adjust: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']

Sets_Involved: [
  'T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI',
  'T4DSL_PUB', 'T4GSL_LIG', 'T4GSL_PRI',
  'T4GSL_PUB', 'DIST_GSL'
  ]
#----------------------------------------------------------------------------------#

################################# PART 3 #################################
# 3.B Implementing the orderly manipulation
#----------------------------------------------------------------------------------#
Blend_Shares_dict: {
  NDP: {},
  NDPTh: {},
  NDPWOS: {},
  NDPWOSTh:{}
  }
#----------------------------------------------------------------------------------#

by_1: ['Strategy','Future.ID','Fuel','Technology','Emission','Year']
by_2: ['Future.ID','Strategy.ID','Strategy','Fuel','Technology','Emission','Season','Year']
########################################################################################

################################# Conditions #################################
trains: 'Trains'
train: 'Train'
tech_train: 'Techs_Trains'
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost']
this_combina: ['Accidents', 'Health', 'Congestion']
PRI: 'PRI'
PUB: 'PUB'
FEAHEA: 'FREHEA'
FRELIG: 'FRELIG'
ini_year_uncer: 'Initial_Year_of_Uncertainty'
scen: 'Scenario'
group_set: 'Group_Set'
interp: 'interp'
type: 'Type'
techs_var: 'Techs' # You must be careful because 'Techs' is also used as a sheet, but here are diferent parameter name.
tech_train_fre: 'Techs_Trains_Freight'
tech_he_fre: 'Techs_He_Freight'
built_in: 'Built-in'
tech_train_ele: 'TRXTRAIELE' # Technologies Trains Electric
exact: 'Exact'
pass: 'Passenger'
fre: 'Freight'
tr: 'TR'
in: 'IN'
min__max: 'Min/Max'
min: 'Min'
max: 'Max'
trans: 'Transport'
indus: 'Industry'
cap_vars_cond: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityUpperLimit']
cap_vars_cond_2: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit']
techs_: 'Techs_'
gen_or_exe_1: 'Generator'
gen_or_exe_2: 'Both'
gen_or_exe_3: 'Executor'
gen_or_exe_4: 'Both'
KKT: 'Karush-Kuhn-Tucker'
motos: 'Motos'
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost']
down: 'down'
up: 'up'
exp_param_rel_base: 'Explored_Parameter_is_Relative_to_Baseline'
year_when_rea_zero: 'Year_when_reaches_zero'
cte: 'Constant'
ble_time_series: 'Blend_Time_Series'
_base_data: '_Base_Dataset'
_backup: '_BACKUP'
exper: 'Experiment'
pass_dem: 'Passenger Demand'
x_cat_list: ['Electrical Demand', 'Fuel Demand', 'Freight Demand']
fre_dem: 'Freight Demand'
ele_dem: 'Electrical Demand'
fuel_dem: 'Fuel Demand'
rail_dem: 'Rail Demand'
mode_shift: 'Mode Shift'
pub_tra_dis: 'Public Transport Distribution'
techs_motos: 'Techs_Motos'
techs_sedan: 'Techs_Sedan'
techs_taxis: 'Techs_Taxis'
techs_bus: 'Techs_Buses'
techs_mibus: 'Techs_Microbuses'
ini_val: 'Initial_Value'
fin_val: 'Final_Value'
shift_per_ini_val: 'Shift_as_percent_of_Initial_Value'
dis: 'Distance'
dem: 'Demand'
non_rail: 'Non-Rail'
adj_oar: 'Adjustment OAR'
acci: 'Accidents'
electri: 'Electrification'
pen: 'Penetration'
this_set: ['TRBUSHYD', 'TRMBUSHYD', 'TRYTKHYD']
this_set_2: 'TRNPASRAIELE'
TRBUSHYD: 'TRBUSHYD'
TRBUSELE: 'TRBUSELE'
TRMBUSHYD: 'TRMBUSHYD'
TRMBUSELE: 'TRMBUSELE'
TRYTKHYD: 'TRYTKHYD'
TRYTKELE: 'TRYTKELE'
PPPVT: 'PPPVT'
PPWNDON: 'PPWNDON'
PPPVDS: 'PPPVDS'
hyd: 'HYD'
group_tech: 'Telef'
##############################################################################

################################# General Var #################################
newfleet: 'NewFleet'
externa_base_year: 'Externalities2021'
externa_gdp: 'Externalities_GDP'
capex_base_year: 'Capex2021'
capex_gdp: 'Capex_GDP'
fopex_base_year: 'FixedOpex2021'
fopex_gdp: 'FixedOpex_GDP'
vopex_base_year: 'VarOpex2021'
vopex_gdp: 'VarOpex_GDP'
opex_base_year: 'Opex2021'
opex_gdp: 'Opex_GDP'
biofuel_shares: 'BiofuelShares'
fleet: 'Fleet'
dist_driven: 'DistanceDriven'
produced_mob: 'ProducedMobility'
filt_fuel_type: 'FilterFuelType'
filt_veh_type: 'FilterVehicleType'
tech_set: 'Tech_Set'
logistic: 'Logistic'
linear: 'Linear'
context: 'Context'
tra_dem_pub: 'E6TDPASPUB' # Transport Demand - Passenger Public
tra_dem_pri: 'E6TDPASPRI' # Transport Demand - Passsenger Private
tra_dem_hea: 'E6TDFREHEA' # Transport Demand - Heavy Freight
tra_dem_med: 'DEMTRNFREMED'
tra_dem_lig: 'E6TDFRELIG' # Transport Demand - Light Freight
tra_non_mot: 'E6TRNOMOT' # Transport Non Motorize
cost: 'Cost'
inter_escal: 'Interpolate_Escalate'
fix_last: 'Fix_Last'
intact: 'intact'
inter: 'Interpolate'
fix_ind: 'Fix_Indicated'
write: 'Write'
overwrite: 'Overwrite'
exat_mult: 'Exact_Multiplier'
copy: 'Copy'
uni_capex: 'UnitCapitalCost (USD)'
uni_fopex: 'UnitFixedCost (USD)'
num_runs: 'Number_of_Runs'
xlrm_id: 'XLRM_ID'
x_math__type: 'X_Mathematical_Type'
exp_param_x: 'Explored_Parameter_of_X'
inv_scen: 'Involved_Scenarios'
inv_sets_ose: 'Involved_Sets_in_Osemosys'
exac_param_inv_ose: 'Exact_Parameters_Involved_in_Osemosys'
x_pla_eng_desc: 'X_Plain_English_Description'
x_num: 'X_Num'
x_cat: 'X_Category'
exp_param_num: 'Explored_Parameter_Number'
min_val: 'Min_Value'
max_val: 'Max_Value'
dep_pre_exp_param: 'Dependency_on_Previous_Explored_Parameter'
sing_dep_spe_xs: 'Sign_Dependency_on_Specified_Xs'
fut_var: 'Futures'
dis_invs: 'Discrete_Investments'
time_series: 'Time_Series'
adop_curve: 'Adoption_Curve'
ini_year: 'Initial_Year'
exact_x: 'Exact_X'
Cat: 'Category'
math_type: 'Math_Type'
rel_base: 'Relative_to_Baseline'
e_pass: 'e_Passenger'
e_fre: 'e_Freight'
i_nt_ele: 'i_NT_elec'
i_nt_fossil: 'i_NT_fossil'
columns: {Run.ID: 'Strategy'}
valid_column_names: [
  "Strategy",
  "Future.ID",
  "Fuel",
  "Technology",
  "Emission",
  "Year",
  "Demand",
  "NewCapacity",
  "AccumulatedNewCapacity",
  "TotalCapacityAnnual",
  "TotalTechnologyAnnualActivity",
  "ProductionByTechnology",
  "UseByTechnology",
  "CapitalInvestment",
  "DiscountedCapitalInvestment",
  "SalvageValue",
  "DiscountedSalvageValue",
  "OperatingCost",
  "DiscountedOperatingCost",
  "AnnualVariableOperatingCost",
  "AnnualFixedOperatingCost",
  "TotalDiscountedCostByTechnology",
  "TotalDiscountedCost",
  "AnnualTechnologyEmission",
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  "AnnualEmissions",
  "Capex2021",
  'FixedOpex2021',
  "VarOpex2021",
  "Opex2021",
  'Externalities2021',
  "Capex_GDP",
  "FixedOpex_GDP",
  "VarOpex_GDP",
  "Opex_GDP",
  'Externalities_GDP'
  ]
##############################################################################