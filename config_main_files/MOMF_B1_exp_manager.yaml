# MOMF Tier 1 B1 (normal and parallel files) build parameterization yaml file

# Note:
# em: for experiment_manager.py
# B1: for B1_Base_Scenarios_Adj_Parallel.py
# FRM: for FRM_.py
##@: Maybe you need to make changes
###: You need make changes
####: Not probably make changes, maybe you need to add new parameters condition into de script experiment_manager.py, this parameter is from Uncertainty_Tables
#####: Is variable possible change inot the Uncertainty_Tables, so maybe you need to adjust
######: In that moment doesn't use the code related with this parameter
## From Where: I don't know from where I search the information to make changes.

########################################################################################

# Model external dependencies: Directories, Files, sheets and columns
########################################################################################
# Directories
Executables: 'Executables' # B1
Executables_2: '.\Executables'
Executables_3: 'Executables'
A1_Inputs: './A1_Inputs/' # B1
A1_Outputs: './A1_Outputs/' # B1
A2_Output_Params: 'A2_Output_Params' # B1
B1_Output_Params: './B1_Output_Params/' # B1
outputs: '/Outputs' # B1, em, FRM
config: 'config' # B1
templates: 'templates' # B1
Experi_plat: './Experimental_Platform' 
Futures: '/Futures/' # em, FRM
futures_2: 'Futures\\' # em, FRM
Futures_3: '\Futures' # em, FRM
Futures_4: 'Futures' # em, FRM
From_Confection: './0_From_Confection/' # em
Base_Model: '1_Baseline_Modelling' # em


# Files, sheets and columns
# B1 script 
# File (First letter of the word y uppercase)
B1_script: 'B1_Base_Scenarios.py' # B1, em
# OSeMOSYS Model
# File
OSeMOSYS_Model: 'OSeMOSYS_Model.txt' # B1, em
# Sheets (First letter of the word y uppercase)
Fuel_Code: 'Fuel_to_Code' # B1, em
Tech_Code: 'Tech_to_Code' # B1, em
# B1 model structure
# File
B1_model_Struct: 'B1_Model_Structure.xlsx' # B1, em
# GDP REF
# File
GDP_REF: '_GDP_Ref.xlsx' # B1, em
# Sheets
GDP: 'GDP' # B1, em
GDP_Growth: 'GDP_Growth' # B1, em
Elast: 'Elasticities' # em
Inten: 'Intensities' # em
# Pikcle Fleet Groups
# File
Pickle_Fleet_Groups: 'A-O_Fleet_Groups.pickle' # B1, em, FRM
# Pickle Fleet Groups Distance
# File
Pickle_Fleet_Groups_Dist: 'A-O_Fleet_Groups_Distance.pickle' # B1, em, FRM
# Pickle Fleet Groups OR
# File
Pickle_Fleet_Groups_OR: 'A-O_Fleet_Groups_OR.pickle' # B1, em, FRM
# Pickle Fleet Groups T2D
# File
Pickle_Fleet_Groups_T2D: 'A-O_Fleet_Groups_T2D.pickle' # B1, em, FRM
# B1 Scenario Configuration
# File
B1_Scen_Config: 'B1_Scenario_Config.xlsx' # B1
# Sheets
Scens: 'Scenarios' # B1
Over_params: 'Overall_Parameters' # B1
TElas: 'TElasticity' # B1
Dis_Levers: 'Distance_Levers' # B1
Mode_Shift: 'Mode_Shift' # B1
Occu_Rate: 'Occupancy_Rate' # B1
Tech_Adop: 'Tech_Adoption' # B1
Elec: 'Electrical' # B1
Smart_Grid: 'SmartGrid' # B1
Effi: 'Efficiency' # B1
Waste: 'Waste' # B1
IPPU: 'IPPU' # B1
Emission_Restriction: 'Emission_Restriction' # B1
# Pickle Blend Shares 0
# File
Blend_Shares_0: 'Blend_Shares_0.pickle' # em
# Yaml conversion format
# File
conv_format: 'conversion_format.yaml' # em
# Script to create and change values of the yaml file to use with otoole
# File
otoole_config: 'change_default_vals_params.py' # em
# Script to concatenate the csvs otoole's outputs
# File
concat_csvs: 'create_csv_concatenate.py' # B1, em
# Script to concatenate the csvs otoole's outputs
# File
test_path: 'test_inputs.py' # B1, em                                         
# Classifier Modes Transport
# File
Modes_Trans: 'A-I_Classifier_Modes_Transport.xlsx' # em
# Experiment Manager Script
# File
Manager: 'experiment_manager_final.py' # em
# FRM Cleanup script
# File
FRM_clean: 'FRM_cleanup.py'
# Pickle GDP dictionary
# File
GDP_dict: 'GDP_dict.pickle' # em
# Pickle reference driven distance
# File
Ref_Dri_Dist: 'reference_driven_distance.pickle' # em
# Pickle reference occupancy rate
# File
Ref_Occu_Rate: 'reference_occupancy_rate.pickle' # em
# Experiment Dictionary
# File
Exper_Dict: 'experiment_dictionary.pickle' # em
# Uncertainty Table
# File
Uncer_Table: 'Uncertainty_Tables_RD.xlsx' # em
# Broad output dataset creator f
# File 
Bro_out_dat_cre: 'Broad_Output_Dataset_Creator_f.py'
# Output Dataset 0
# File
Out_dat_0: 'output_dataset_0.csv'
# Output Dataset f
# File
Out_dat_f: 'output_dataset_f.csv'
# Input Dataset 0
# File
In_dat_0: 'input_dataset_0.csv'
# Input Dataset f
# File
In_dat_f: 'input_dataset_f.csv'
# OSeMOSYS Country Input
# File
ose_cou_in: 'OSMOSYS_RD_Input'
# OSeMOSYS Country Output
# File
ose_cou_out: 'OSMOSYS_RD_Output'
# Results folder
results: 'Executables\\' # B1
########################################################################################

################################# Variable definitions #################################
# Configuration variables
#----------------------------------------------------------------------------------#
# Start command line
start: 'start cmd.exe /k cd ' # B1, em, FRM

# Solver
solver: 'cbc' # Could you use 'glpk', 'cbc' or 'cplex' # B1, em, FRM

# For GLPK use
glpk_option: 'new' # Could you use 'old' for the first method and 'new' for method with otoole incorporate # B1, em, FRM

# For CBC use
iteration_time: 60

# Choose if want to delete or not the solver solutions files
del_files: False # B1, em, FRM

# Maximun cores to use per iteration
Number_of_Runs: 2 # em
Scenario_to_Reproduce: 'All' # em
Initial_Future_to_Print: 1 # em
Final_Future_to_Print: 10 # em
Initial_Year_of_Uncertainty: 2025 # em ##@
Experiment_ID: 1 # em
max_x_per_iter: 2 # B1, em
execute_scenarios: ['All'] # em # Could you put 'All', 'BAU' or any scenario of the study
execute_futures: [0,2] # em # Select range of the futures you want to execute

# Choose if want run script in parallel or not
parallel: True

# Control inputs
is_this_last_update: True # B1, em
# Mode of simulation
generator_or_executor: 'Both' # options: 'None', 'Generator', 'Executor', 'Both' # B1, em
gen_or_exe_1: 'Generator' # B1, em # Must not change
gen_or_exe_2: 'Both' # B1, em # Must not change
gen_or_exe_3: 'Executor' # B1, em # Must not change
gen_or_exe_4: 'Both' # B1, em # Must not change
inputs_txt_csv: 'Both' # 'Both', 'csv' # B1, em # Must not change

# Country
coun_initial: 'RD' # B1

disc_rate: 0.0504 # Is the same value of the parameter DiscountRate of the dict "default_val_params" # em ###

adjust_fre_rai: True # B1

check_assignation: False

ignore_biofuels: False

manipulate_param_keys_2: True # em

initial_year_index: 1 # em

# this # is a top that is hardly ever reached
top_maxcap: 9999 # B1


# Number to round
round_#: 4 # B1, em

# Sectors variables
Use_Energy: True # em 
Use_Waste: True #  em
Use_Waste_B1: True # B1
Use_Transport_B1: True # B1
Use_AFOLU: True # em
Use_PIUP: True # em

Use_Blend_Shares_B1: True # You musn't change # B1
Use_Blend_Shares: False # You musn't change #  em

# Scenarios
# Only use the three main letters                                 
#--------------------------------------------------------------------------------------------------------------------#
# These parameter you can change for your two mains scenarios, but only the string, You musn't change the name of the variable
BAU: 'BAU' # B1, em, FRM
NDP: 'LTS' # B1, em, FRM ###

# You need define whatever new scenario name you use 
DDP: 'DDP' # B1, em, FRM
LTS: 'LTS' # em
#--------------------------------------------------------------------------------------------------------------------#

# Years variables
#----------------------------------------------------------------------------------#
# Year to apply discount rate
year_apply_discount_rate: 2024 # B1, em ###
# Base year
base_year: 2018 # em ###
R_base_year: 'R2021' # em #check
# R_base_year == R2021 Do not uncommented, this is a variable defined at the script
# r_base_year_max == r2021max Do not uncommented, this is a variable defined at the script
year_first_range: 2018 # B1, em
year_driven_distance: 2019 # B1
year_start_blend_point: 2020 # B1
year_start_blend_point_2: 2026 # B1
year_mid_blend_point: 2021 # B1
year_final_blend_point: 2022 # B1
year_final_blend_point_2: 2030 # B1

# Changed year
change_year_B1: 2024 # B1 ###
change_year: 2025 # em ###
# driven_distance_change_year == driven_distance_2024 Do not uncommented, this is a variable defined at the script
# index_change_year == index_2024
year_resticcion_tech: 2024 # em ###

# Final year
final_year: 2050 # B1, em ###
final_year_str: '2050'
R_final_year: 'R2050' # B1, em
v_final_year: 'v_2050' # B1, em
# v_final_year == 'v_2050' Do not uncommented, this is a variable defined at the script
# R_final_year == R2050
# r_final_year == r2050
# float_v_final_year == float_v2050
# the_final_year_value == the_2050_value
# the_final_year_value_raw == the_2050_value_raw
# target_final_year_increment == target_2050_increment
# total_final_year_increment == total_2050_increment

first_decade_year: 2030 # B1
v_first_decade_year: 'v_2030' # B1 
# v_first_decade_year == 'v_2030' Do not uncommented, this is a variable defined at the script
# float_v_first_decade_year == float_v2030

sec_decade_year: 2040 # B1
v_sec_decade_year: 'v_2040' # B1
# v_sec_decade_year == 'v_2040' Do not uncommented, this is a variable defined at the script
# float_v_sec_decade_year == float_v2040
#----------------------------------------------------------------------------------#

# General values
#----------------------------------------------------------------------------------#
default_val_params: { # B1, em, FRM, plot_csvs, change_default_vals_params ###
  AccumulatedAnnualDemand: 0,
  AnnualEmissionLimit: 999999999999999999999,
  AnnualExogenousEmission: 0,
  AvailabilityFactor: 1,
  CapacityFactor: 1,
  CapacityOfOneTechnologyUnit: 0,
  CapacityToActivityUnit: 1,
  CapitalCost: 0.0001,
  CapitalCostStorage: 0,
  Conversionld: 0,
  Conversionlh: 0,
  Conversionls: 0,
  DaySplit: 0.00137,
  DaysInDayType: 7,
  DepreciationMethod: 1,
  DiscountRate: 0.0504, ###
  EmissionActivityRatio: 0,
  EmissionsPenalty: 0,
  FixedCost: 0,
  InputActivityRatio: 0,
  MinStorageCharge: 0,
  ModelPeriodEmissionLimit: 999999999999999999999,
  ModelPeriodExogenousEmission: 0,
  OperationalLife: 1,
  OperationalLifeStorage: 1,
  OutputActivityRatio: 0,
  REMinProductionTarget: 0,
  RETagFuel: 0,
  RETagTechnology: 0,
  ReserveMargin: 0,
  ReserveMarginTagFuel: 0,
  ReserveMarginTagTechnology: 0,
  ResidualCapacity: 0,
  ResidualStorageCapacity: 0,
  SpecifiedAnnualDemand: 0,
  SpecifiedDemandProfile: 0,
  StorageLevelStart: 0,
  StorageMaxChargeRate: 0,
  StorageMaxDischargeRate: 0,
  TechnologyFromStorage: 0,
  TechnologyToStorage: 0,
  TotalAnnualMaxCapacity: 999999999999999999999,
  TotalAnnualMaxCapacityInvestment: 999999999999999999999,
  TotalAnnualMinCapacity: 0,
  TotalAnnualMinCapacityInvestment: 0,
  TotalTechnologyAnnualActivityLowerLimit: 0,
  TotalTechnologyAnnualActivityUpperLimit: 999999999999999999999,
  TotalTechnologyModelPeriodActivityLowerLimit: 0,
  TotalTechnologyModelPeriodActivityUpperLimit: 999999999999999999999,
  TradeRoute: 0,
  VariableCost: 0.0001,
  YearSplit: 0
  }

params_inputs_data: # B1, em, FRM ###
  - AccumulatedAnnualDemand
  #- AnnualEmissionLimit
  - AnnualExogenousEmission
  #- AvailabilityFactor
  #- CapacityFactor
  - CapacityOfOneTechnologyUnit
  #- CapacityToActivityUnit
  #- CapitalCost
  - CapitalCostStorage
  - Conversionld
  - Conversionlh
  - Conversionls
  - DaySplit
  - DaysInDayType
  - DepreciationMethod
  - DiscountRate
  #- EmissionActivityRatio
  #- EmissionsPenalty
  #- FixedCost
  #- InputActivityRatio
  - MinStorageCharge
  - ModelPeriodEmissionLimit
  - ModelPeriodExogenousEmission
  #- OperationalLife
  - OperationalLifeStorage
  #- OutputActivityRatio
  - REMinProductionTarget
  - RETagFuel
  - RETagTechnology
  - ReserveMargin
  - ReserveMarginTagFuel
  - ReserveMarginTagTechnology
  #- ResidualCapacity
  - ResidualStorageCapacity
  #- SpecifiedAnnualDemand
  #- SpecifiedDemandProfile
  - StorageLevelStart
  - StorageMaxChargeRate
  - StorageMaxDischargeRate
  - TechnologyFromStorage
  - TechnologyToStorage
  #- TotalAnnualMaxCapacity
  - TotalAnnualMaxCapacityInvestment
  #- TotalAnnualMinCapacity
  #- TotalAnnualMinCapacityInvestment
  #- TotalTechnologyAnnualActivityLowerLimit
  #- TotalTechnologyAnnualActivityUpperLimit
  - TotalTechnologyModelPeriodActivityLowerLimit
  - TotalTechnologyModelPeriodActivityUpperLimit
  - TradeRoute
  #- VariableCost
  #- YearSplit

params_inputs_data_excep_by_scen: { # B1, em, FRM ###
  BAU: ['TotalAnnualMinCapacity', 'AnnualEmissionLimit'],
  LTS: []
}                   


sets_otoole: [ # B1, em, FRM
  YEAR,
  TECHNOLOGY,
  TIMESLICE,
  FUEL,
  EMISSION,
  MODE_OF_OPERATION,
  REGION,
  SEASON,
  DAYTYPE,
  DAILYTIMEBRACKET,
  STORAGE
  ]

new_results_otoole: { # B1, em, FRM
  AnnualTechnologyEmissionPenaltyByEmission,
  AnnualTechnologyEmissionsPenalty,
  DiscountedCapitalInvestment,
  DiscountedOperatingCost,
  OperatingCost,
  TotalDiscountedCostByTechnology
}
#----------------------------------------------------------------------------------#

# Data Processor function
#----------------------------------------------------------------------------------#
all_vars: [ # B1, em
  'Demand',
  'NewCapacity',
  'AccumulatedNewCapacity',
  'TotalCapacityAnnual',
  'TotalTechnologyAnnualActivity',
  'ProductionByTechnology',
  'UseByTechnology',
  'CapitalInvestment',
  'DiscountedCapitalInvestment',
  'SalvageValue',
  'DiscountedSalvageValue',
  'OperatingCost',
  'DiscountedOperatingCost',
  'AnnualVariableOperatingCost',
  'AnnualFixedOperatingCost',
  'TotalDiscountedCostByTechnology',
  'TotalDiscountedCost',
  'AnnualTechnologyEmission',
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  'AnnualEmissions'
  ]

more_vars: [ # B1, em
  'DistanceDriven',
  'Fleet',
  'NewFleet',
  'ProducedMobility'
  ]

filter_vars: [ # B1, em
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex${year_apply_discount_rate}', # CapitalInvestment
  'FixedOpex${year_apply_discount_rate}', # AnnualFixedOperatingCost
  'VarOpex${year_apply_discount_rate}', # AnnualVariableOperatingCost
  'Opex${year_apply_discount_rate}', # OperatingCost
  'Externalities${year_apply_discount_rate}', # AnnualTechnologyEmissionPenaltyByEmission
  #
  'Capex_GDP', # CapitalInvestment
  'FixedOpex_GDP', # AnnualFixedOperatingCost
  'VarOpex_GDP', # AnnualVariableOperatingCost
  'Opex_GDP', # OperatingCost
  'Externalities_GDP' # AnnualTechnologyEmissionPenaltyByEmission
  ]

output_header: [ 'Strategy', 'Future.ID', 'Fuel', 'Technology', 'Emission', 'Year' ] # B1, em, FRM
#----------------------------------------------------------------------------------#

# Function C Mathprog Parallel
#--------------------------------------------------------------------------------------------------------------------#
header_indices: ['Scenario','Parameter','r','t','f','e','m','l','y','ls','ld','lh','s','value'] # B1, em, FRM

basic_header_elements: [ 'Future.ID', 'Strategy.ID', 'Strategy', 'Fuel', 'Technology', 'Emission', 'Season', 'Year' ] # B1, em, FRM

parameters_to_print: [ # B1, em, FRM
  'SpecifiedAnnualDemand',
  'CapacityFactor',
  'OperationalLife',
  'ResidualCapacity',
  'InputActivityRatio',
  'OutputActivityRatio',
  'EmissionActivityRatio',
  'EmissionsPenalty',
  'CapitalCost',
  'VariableCost',
  'FixedCost',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMinCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyAnnualActivityLowerLimit'
  ]

parameters_to_print_last: [ # B1
  'AnnualEmissionLimit',
  'AvailabilityFactor',
  'CapacityFactor',
  'CapacityToActivityUnit',
  'CapitalCost',
  'DepreciationMethod',
  'DiscountRate',
  'EmissionActivityRatio',
  'EmissionsPenalty',
  'FixedCost',
  'InputActivityRatio',
  'ModelPeriodEmissionLimit',
  'OperationalLife',
  'OutputActivityRatio',
  'REMinProductionTarget',
  'ResidualCapacity',
  'RETagFuel',
  'RETagTechnology',
  'SpecifiedAnnualDemand',
  'SpecifiedDemandProfile',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacity',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityLowerLimit',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyModelPeriodActivityLowerLimit',
  'TotalTechnologyModelPeriodActivityUpperLimit',
  'VariableCost',
  'YearSplit'
  ]

more_params: [ # B1, em, FRM
  'DistanceDriven',
  'UnitCapitalCost (USD)',
  'UnitFixedCost (USD)',
  'BiofuelShares'
  ]

filter_params: ['FilterFuelType', 'FilterVehicleType'] # B1, em, FRM
#--------------------------------------------------------------------------------------------------------------------#

# CSV Printer Parallel Function
#--------------------------------------------------------------------------------------------------------------------#
sets: [ # B1
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION','MODE_OF_OPERATION','YEAR','TIMESLICE','SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]

expand_plants: ['PPPVT', 'PPWNDON', 'PPPVDS']
#--------------------------------------------------------------------------------------------------------------------#

################################# PART 1 #################################
# 1.A Extract the strucute setup of the model based on 'Structure.xlsx'
#--------------------------------------------------------------------------------------------------------------------#

S_DICT_sets_structure: { # B1, em
  set: [],
  initial: [],
  number_of_elements: [],
  elements_list: []
  }

S_DICT_params_structure: { # B1, em
  category: [],
  parameter: [],
  number_of_elements: [],
  index_list: []
  }

S_DICT_vars_structure: { # B1, em
  category: [],
  variable: [],
  number_of_elements: [],
  index_list: []
  }
#--------------------------------------------------------------------------------------------------------------------#

# 1.B Proceed to read all the base scenarios
#--------------------------------------------------------------------------------------------------------------------#
header_row: [ # B1
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','TIMESLICE','YEAR',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#
################################# PART 2 #################################
# 2: Manipulate each scenario for later printing of the .csv files in the same adress
#--------------------------------------------------------------------------------------------------------------------#
capacity_variables: [ 'TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit' ] # B1

cost_sets_eliminate: ['TRANOMOTBike', 'TRANOMOTWalk', 'TRANPUB', 'TRANRAILINF', 'TRANRAILCAR'] # B1

set_list_group_dict: { # B1
  Passenger: ['E6TDPASPRI', 'E6TDPASPUB', 'E6TDPASTUR', 'E6TRNOMOT'],
  Freight: ['E6TDFREHEA', 'E6TDFRELIG']
  }

Sets_Involved: [ # B1, em  ##@
  'Techs_He_Freight', 'Techs_Li_Freight', 'Techs_Trains_Freight',
  'Techs_Auto', 'Techs_Motos', 'Techs_SUV' , 'Techs_Taxi',
  'Techs_Buses_Pub', 'Techs_Buses_Tur', 'Techs_Buses_Micro'
  ]

# Sets_Involved: [ # em
#   'T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI',
#   'T4DSL_PUB', 'T4GSL_LIG', 'T4GSL_PRI',
#   'T4GSL_PUB', 'DIST_GSL'
#   ]

params_to_adjust: [ # B1, em
  'TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'
  ]

ignore_techs: [ # B1
  'TRANRAILFREINF',  'TRANOMOTWalk', 'TRANOMOTBike',
  'TRXTRAIELE', 'TRXTRAIFREELE', 'TRANRAILINF', 'TRANPUB',
  'TRANRAILCAR', 'LATR', 'PROD_CLK_TRAD', 'NO_CONTR_OD',
  'AG_TRVEG'
  ]


# IGNORE_TECHS:
# is defined to control "rewrite_techs_maxcap". It updates capacities of
# transport that belong to the Fleet_Groups dictionary.
# Other implementations may also be effected by .

parameters_involved: [ # B1
  'CapitalCost','FixedCost','TotalAnnualMaxCapacity','TotalTechnologyAnnualActivityLowerLimit','ResidualCapacity'
  ]

Diesel_Techs: ['T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI', 'T4DSL_PUB'] # B1

Diesel_Techs_Emissions: { # B1
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ] 
  }

Gasoline_Techs: ['T4GSL_LIG', 'T4GSL_PRI', 'T4GSL_PUB', 'DIST_GSL'] # B1

Gasoline_Techs_Emissions: { # B1
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

basic_header_elements: [ # B1
  'Future.ID', 'Strategy.ID', 'Strategy', 'Fuel',
  'Technology', 'Emission', 'Season', 'Year'
  ]

blend_shares: { # em
  NDP: {},
  NDPA: {},
  NDPB: {},
  NDPC: {},
  NDPD: {},
  NDPE: {},
  NDPF: {},
  NDPG: {},
  NDPAlt: {},
  NDPPlus: {}
  }

each_parameter_header: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','YEAR','TIMESLICE',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#

# 2.B Read all the base scenarios
#----------------------------------------------------------------------------------#
header_row_em: [ # em
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION','MODE_OF_OPERATION','TIMESLICE','YEAR','SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]

Techs_Emissions: { # em
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ],
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

except_techs: [ # em ##From Where ###
  'Techs_Auto', 'Techs_Motos', 'Techs_Buses_Pub', 'Techs_Buses_Tur',
  'Techs_He_Freight', 'Techs_Li_Freigth',
  'Techs_Buses_Micro'
  ]

except_scen: ['LTS'] # em  ###
#----------------------------------------------------------------------------------#

################################# PART 3 #################################
# 3.B Implementing the orderly manipulation
#----------------------------------------------------------------------------------#
Blend_Shares_dict: { # em
  NDP: {},
  NDPTh: {},
  NDPWOS: {},
  NDPWOSTh: {}
  }
#----------------------------------------------------------------------------------#

by_1: ['Strategy','Future.ID','Fuel','Technology','Emission','Year'] # em 
by_2: ['Future.ID','Strategy.ID','Strategy','Fuel','Technology','Emission','Season','Year'] # em
########################################################################################

################################# Conditions #################################
trains: 'Trains' # B1, em
group_tech: 'Telef' # B1
tra_techs: ['Techs_Auto', 'Techs_Motos', 'Techs_SUV' , 'Techs_Taxi', 'Techs_Buses_Pub', 'Techs_Buses_Tur', 'Techs_Buses_Micro', 'Techs_He_Freight', 'Techs_Li_Freight'] # em ###
tra_techs_for_passengers: ['Techs_Auto', 'Techs_SUV' , 'Techs_Taxi', 'Techs_Buses_Pub', 'Techs_Buses_Tur', 'Techs_Buses_Micro'] # em ###
trn_list_tech_groups: [ # em ###
  'Techs_Auto', 'Techs_Motos', 'Techs_SUV' , 'Techs_Taxi',
  'Techs_Buses_Pub', 'Techs_Buses_Tur', 'Techs_Buses_Micro', 'Techs_Telef',
  'Techs_Trains', 'Techs_Trains_Freight', 'Techs_He_Freight',
  'Techs_Li_Freight'
  ] 

train: 'Train' # B1, em
tech_train: 'Techs_Trains' # B1, em
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost'] # B1, em
this_combina: [ # B1, em ##@
  'salud_residuos', 'FERT_ORG','RM','contam_agua','Health',
  'Accidents','turismo_residuos','Congestion', 'CONHAB',
  'CONTUR', 'CONVAR', 'CONHICK', 'RESHID', 'DAPANI'
  ] 
PRI: 'PRI' # B1, em
PUB: 'PUB' # B1, em
FEAHEA: 'FREHEA' # B1, em
FRELIG: 'FRELIG' # B1, em
TUR: 'TUR' # B1, em
ini_year_uncer: 'Initial_Year_of_Uncertainty' # B1, em
scen: 'Scenario' # B1, em
group_set: 'Group_Set' # B1, em
interp: 'interp' # B1, em
type: 'Type' # B1, em
techs_var: 'Techs' # You must be careful because 'Techs' is also used as a sheet, but here are diferent parameter name. # B1, em
tech_train_fre: 'Techs_Trains_Freight' # B1, em
tech_he_fre: 'Techs_He_Freight' # B1, em
tech_telef: 'Techs_Telef' # B1
techs_trans_pass: ['Techs_Taxi', 'Techs_Buses_Pub', 'Techs_Buses_Micro'] # B1
this_set_complement_vals_rel_100: { # B1
  'Techs_Taxi': 0.67,
  'Techs_Buses_Pub': 33.53,
  'Techs_Buses_Micro': 65.80
  }
built_in: 'Built-in' # B1, em
tech_train_ele: 'TRXTRAIELE' # Technologies Trains Electric # B1, em
exact: 'Exact' # B1, em
pass: 'Passenger' # B1, em
fre: 'Freight' # B1, em
tr: 'TR' # B1, em
in: 'IN' # B1, em
min__max: 'Min/Max' # B1, em
min: 'Min' # B1, em
max: 'Max' # B1, em
trans: 'Transport' # B1, em
indus: 'Industry' # B1, em
cap_vars: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'] # B1
cap_vars_cond: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityUpperLimit'] # B1, em
cap_vars_cond_2: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'] # B1, em
techs_: 'Techs_' # B1, em
KKT: 'Karush-Kuhn-Tucker' # B1, em
motrocy: 'Motos' # em
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost'] # B1, em
down: 'down' # em
up: 'up' # em
######################################################################
# Uncertainty_Tables columns
exp_param_rel_base: 'Explored_Parameter_is_Relative_to_Baseline' # em
xlrm_id: 'XLRM_ID' # em
exp_param_x: 'Explored_Parameter_of_X' # em
x_math__type: 'X_Mathematical_Type' # em
inv_scen: 'Involved_Scenarios' # em
inv_sets_ose: 'Involved_Sets_in_Osemosys' # em
exac_param_inv_ose: 'Exact_Parameters_Involved_in_Osemosys' # em
x_pla_eng_desc: 'X_Plain_English_Description' # em
x_num: 'X_Num' # em
x_cat_col_name: 'X_Category' # em
#####################################################################
year_when_rea_zero: 'Year_when_reaches_zero' # em ####
over_dc_shift: 'Overall_DC_Shift' # em ####
cte: 'Constant' # em ####
ble_time_series: 'Blend_Time_Series' # em ####
_base_data: '_Base_Dataset' # em
_backup: '_BACKUP' # em 
exper: 'Experiment' # em
x_cat_fuel_dem: 'Fuel Demand' # em #####
x_cat_pub_tra_dis: 'Public Transport Distribution' # em #####
techs_motrocy: 'Techs_Motos' # em
techs_sedan: 'Techs_Auto' # em ###
techs_taxis: 'Techs_Taxis' # em  
techs_bus: 'Techs_Buses' # em
techs_mibus: 'Techs_Buses_Micro' # em
ini_val: 'Initial_Value' # em ##@
fin_val: 'Final_Value' # em ##@
shift_per_ini_val: 'Shift_as_percent_of_Initial_Value' # em ####
acci: 'Accidents' # em
this_set_tr_hyd: ['TRBPUHYD','TRMBSHYD','TRBTURHYD','TRYTKHYD'] # em ## From Where
this_set_tra_pas_rai_ele: 'TRNPASRAIELE' # Transport passenger rail electric # em ## From Where
this_set_waste: ['INORG_RCY_OS', 'COMPOST'] # em ###
this_set_pp_wdn_on: 'PPWNDON' # em ##@
this_set_pp_wdn_off: 'PPWNDOFF' # em ##@
this_set_afolu_1: 'Cafe' # em ######
this_set_afolu_2: 'Cana' # em ######
this_set_techs_buses: ['Techs_Buses_Pub', 'Techs_Buses_Tur', 'Techs_Buses_Micro', 'Techs_Trains'] # em ##@
TRA_BUS_HYD: 'TRBTURHYD' # em ##@
TRA_BUS_ELE: 'TRBTURELE' # em ##@
TRM_BUS_HYD: 'TRMBSHYD' # em ##@
TRM_BUS_ELE: 'TRMBSELE' # em ##@
TRA_PUB_HYD: 'TRBPUHYD' # em ##@
TRA_PUB_ELE: 'TRBPUELE' # em ##@
TRY_TK_HYD: 'TRYTKHYD' # em ##@
TRY_TK_ELE: 'TRYTKELE' # em ##@
TRY_LF_ELE: 'TRYLFELE' # REVISAR SI HAY QUE AGREGAR
TRY_TK_HD: 'TRYTKHD' # em ### ADEMAS TAMBIEN HAY BUSES DE LOS 3 TIPOS DE FUEL, Y CARGA LIVIANA Y PESADA
a_fuel_set: 'CLK_PROD' # em ##@

##############################################################################

################################# General Var #################################
newfleet: 'NewFleet' # B1, em
externa_base_year: 'Externalities${year_apply_discount_rate}'
externa_gdp: 'Externalities_GDP' # B1, em
capex_base_year: 'Capex${year_apply_discount_rate}'
capex_gdp: 'Capex_GDP' # B1, em
fopex_base_year: 'FixedOpex${year_apply_discount_rate}'
fopex_gdp: 'FixedOpex_GDP' # B1, em
vopex_base_year: 'VarOpex${year_apply_discount_rate}'
vopex_gdp: 'VarOpex_GDP' # B1, em
opex_base_year: 'Opex${year_apply_discount_rate}'
opex_gdp: 'Opex_GDP' # B1, em
biofuel_shares: 'BiofuelShares' # B1, em
fleet: 'Fleet' # B1, em
dist_driven: 'DistanceDriven' # B1, em
produced_mob: 'ProducedMobility' # B1, em
filt_fuel_type: 'FilterFuelType' # B1, em
filt_veh_type: 'FilterVehicleType' # B1, em
tech_set: 'Tech_Set' # B1, em
logistic: 'Logistic' # B1, em
linear: 'Linear' # B1, em
context: 'Context' # B1, em
tra_dem_pub: 'E6TDPASPUB' # Transport Demand - Passenger Public # B1, em ###
tra_dem_tur: 'E6TDPASTUR' # Transport Demand - Passenger Tourism # em ###
tra_dem_pri: 'E6TDPASPRI' # Transport Demand - Passsenger Private # B1, em ###
tra_dem_hea: 'E6TDFREHEA' # Transport Demand - Heavy Freight # B1, em ###
tra_dem_med: 'DEMTRNFREMED' # B1, em ###
tra_dem_lig: 'E6TDFRELIG' # Transport Demand - Light Freight # B1, em ###
tra_non_mot: 'E6TRNOMOT' # Transport Non Motorize # B1, em ###
tra_mot_gls: 'TRMOTGSL' # B1
cost: 'Cost' # B1
inter_escal: 'Interpolate_Escalate' # B1
fix_last: 'Fix_Last' # B1
intact: 'intact' # B1
interpo: 'Interpolate' # B1
fix_ind: 'Fix_Indicated' # B1
write: 'Write' # B1
overwrite: 'Overwrite' # B1
exat_mult: 'Exact_Multiplier' # B1
copy: 'Copy' # B1
uni_capex: 'UnitCapitalCost (USD)'
uni_fopex: 'UnitFixedCost (USD)'
num_runs: 'Number_of_Runs' # em
x_cat_emi_wat_ind: ['Emisiones por aguas residuales industriales','Methane recovery'] # em ##@
x_cat_na_waste_pro: 'National waste production' # em ##@
x_cat_list: ['Electrical Demand', 'Fuel Demand', 'Freight Demand'] # em
x_cat_tur_dem: ['Other Transport Demands'] # em
x_cat_tourism_1: 'Other Transport Demands' # em
pass_dem: 'Passenger Demand' # em
fre_dem: 'Freight Demand'  # em
ele_dem: 'Electrical Demand' # em
x_cat_dis: 'Distance' # em ##@
x_cat_dem: 'Demand' # em ##@
x_cat_non_rail: 'Non-Rail' # em ##@
x_cat_adj_oar: 'Adjustment OAR' # em ##@
x_cat_ele: ['Electrical Demand'] # em ##@
x_cat_afolu_list: ['Agricultural Demand', 'Agricultural Yield', 'Agricultural Yield Livestock'] # em ##@ 
x_cat_afolu_1: 'Agricultural Demand' # em ##@
x_cat_afolu_2: 'Agricultural Yield Livestock' # em ##@
x_cat_afolu_3: 'Agricultural Yield' # em ##@
x_cat_afolu_4: 'ForestCover' # em ##@
x_cat_piup: 'Adjustment clinker factor' # em ##@
x_cat_electri: 'Electrification' # em ##@ 
x_cat_pen: 'Penetration' # em ##@
x_cat_electri_priv_tra: 'Electrification of Private Transport' # em ##@
x_cat_rail_dem: 'Rail Demand' # em ##@
x_cat_mode_shift: 'Mode Shift' # em ##@
x_cat_bev_cost: 'Unit BEV Cost' # em ######
x_cat_no_orga_recy_org_comp: 'inorganicos reciclados y organicos compostados' # em ##@
x_cat_water_resi_mana: 'aguas residuales tratadas' # em ##@
exp_param_num: 'Explored_Parameter_Number' # em
min_val: 'Min_Value' # em
max_val: 'Max_Value' # em
dep_pre_exp_param: 'Dependency_on_Previous_Explored_Parameter' # em
sing_dep_spe_xs: 'Sign_Dependency_on_Specified_Xs' # em
fut_var: 'Futures' # em
exact_x: 'Exact_X' # em
exact_x_2: 'EXPLICIT' # em
Cat: 'Category' # em
math_type: 'Math_Type' # em ##@
math_type_mult_rest: 'Mult_Restriction' # em ##@
math_type_start: 'Start' # em ##@
math_type_end: 'End' # em ##@
math_type_curves_list: ['Adoption_Curve', 'Mult_Adoption_Curve'] # em ##@
math_type_dis_inv: 'Discrete_Investments' # em ##@
math_type_cte: 'Constant' # em ##@
math_type_blend: 'Blend_Time_Series' # em ##@
math_type_dis_invs: 'Discrete_Investments' # em ##@
math_type_time_series: 'Time_Series' # em ##@
math_type_adop_curve: 'Adoption_Curve' # em ##@
math_type_multi_adop_curve: 'Mult_Adoption_Curve' # em ##@
math_type_list_types: ['Time_Series', 'Discrete_Investments', 'Mult_Adoption_Curve', 'Mult_Restriction', 'Mult_Restriction_Start', 'Mult_Restriction_End'] # em ##@
math_type_list_mult: ['Mult_Adoption_Curve', 'Mult_Restriction', 'Mult_Restriction_Start', 'Mult_Restriction_End'] # em ##@
ini_year: 'Initial_Year' # em ##@
rel_base: 'Relative_to_Baseline' # em ##@
#########################################
# Name of the columns from _GDP_Ref.xlsx
e_pass: 'e_Passenger' # em
e_fre: 'e_Freight' # em
i_nt_ele: 'i_NT_elec' # em
i_nt_fossil: 'i_NT_fossil' # em
#########################################
columns: {Run.ID: 'Strategy'} # em
valid_column_names: [ # em, Broad
  "Strategy",
  "Future.ID",
  "Fuel",
  "Technology",
  "Emission",
  "Year",
  "Demand",
  "NewCapacity",
  "AccumulatedNewCapacity",
  "TotalCapacityAnnual",
  "TotalTechnologyAnnualActivity",
  "ProductionByTechnology",
  "UseByTechnology",
  "CapitalInvestment",
  "DiscountedCapitalInvestment",
  "SalvageValue",
  "DiscountedSalvageValue",
  "OperatingCost",
  "DiscountedOperatingCost",
  "AnnualVariableOperatingCost",
  "AnnualFixedOperatingCost",
  "TotalDiscountedCostByTechnology",
  "TotalDiscountedCost",
  "AnnualTechnologyEmission",
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  "AnnualEmissions",
  "Capex${year_apply_discount_rate}",
  'FixedOpex${year_apply_discount_rate}',
  "VarOpex${year_apply_discount_rate}",
  "Opex${year_apply_discount_rate}",
  'Externalities${year_apply_discount_rate}',
  "Capex_GDP",
  "FixedOpex_GDP",
  "VarOpex_GDP",
  "Opex_GDP",
  'Externalities_GDP'
  ]

common_complement_x_cat_no_orga_recy_org_comp: [ #em ##@
  'LANDFILL', 'NO_CONTR_OD', 'COPROC', 'INCIN', 'OPEN_BURN',
  'SIT_CLAN', 'NO_OSS_BLEND', 'NO_OSS_NO_COLL', 'BLEND_NO_DCOLL', 
  'BLEND_NO_COLL', 'NO_SS'
  ]

common_complement_x_cat_water_resi_mana: [ #em ##@
  'LATR', 'EFLT_DISC',
  'WWWOT', 'DIRECT_DISC', 'SEWER_NO_T']

# Variables this_parameter... are list with parameters of OSeMOSYS
############################################
this_parameter: ['SpecifiedAnnualDemand'] # em

this_parameter_2: ['TotalTechnologyAnnualActivityLowerLimit','TotalTechnologyAnnualActivityUpperLimit'] # em

this_parameter_3: ['CapitalCost'] # em

this_parameter_4: ['VariableCost'] # em

this_parameter_5: ['VariableCost','TotalTechnologyAnnualActivityLowerLimit','TotalTechnologyAnnualActivityUpperLimit'] # em

this_parameter_6: ['TotalTechnologyAnnualActivityUpperLimit', 'TotalTechnologyAnnualActivityLowerLimit'] # em

this_parameter_7: ['OutputActivityRatio'] # em
############################################

adjust_sets_waste: [ #em ##@
  "INORG_RCY_OS", "COMPOST", "LANDFILL", "NO_CONTR_OD", "COPROC", "INCIN", "OPEN_BURN",
  "SIT_CLAN", "AERO_PTAR", "SEPT_SYST", "LATR", "EFLT_DISC", "SEWER_NO_T", "OSS_INORG",
  "OSS_ORG", "NO_OSS_BLEND", "NO_OSS_NO_COLL", "INORG_DCOLL", "ORG_DCOLL", "BLEND_NO_DCOLL",
  "BLEND_NO_COLL", "INORG_SS", "ORG_SS", "NO_SS", "WWWT", "WWWOT", "SEWERWW", "DIRECT_DISC"
]

#all_covers_AFOLU: [
#    "AG_RIC", "AG_BAN", "AG_SGC", "AG_COC", "AG_TRVEG", "AG_CAF", "AG_LEG", "AG_ROT", 
#    "AG_FRT", "AGR_CER", "AGR_OTP", "GA_LEC", "GA_CARAVI", "GA_CARBOV", "GA_OTRCARPRO", 
#    "GA_CARPOR", "GA_OTRCAR", "LU_FOR", "LU_AGR", "LU_GAN", "LU_MTS", "LU_SAB", "LU_URB", 
#    "LU_OLU", "LU_LATHUM", "LU_CLF", "LU_LATSHUM", "LU_DCON", "LU_SCON", "LU_WET", "LU_DRY"
#]

all_covers_AFOLU: [ #em ##@
    "LU_FOR", "LU_AGR", "LU_GAN"
]

under_covers_FOR: [ #em ##@
    'LU_LATHUM', 'LU_DCON', 'LU_WET', 'LU_DRY'
]

under_covers_AGR: [ #em ##@
    "AG_BAN", "AG_CAF", "AG_COC", "AG_FRT", "AG_LEG", "AG_RIC", "AG_ROT", "AG_SGC", "AG_TRVEG", "AGR_CER", "AGR_OTP"
]

under_covers_GAN: [ #em ##@
    "GA_CARAVI", "GA_CARBOV", "GA_CARPOR", "GA_LEC", "GA_OTRCAR", "GA_OTRCARPRO"
]

group_tech_set: 'Techs_Auto' # em ##@

exception_list_TRAN: ['TRBPUHYD', 'TRYTKHYD'] # em ##@
special_list_dict_TRAN: {TRYTKHYD: ['TRYTKELE', 'TRYTKHYD']} # em ##@
##############################################################################

# Parameters to script create_csv_concatenate.py
# First: Select model
model: 'MOMF'

# If model is MOMF, select what tier use
tier: '3a' # two options: '1' or '3a'

# Second: Select folders
tier1_dir: '\t1_confection\Executables' # Don't change
tier3a_dir: '\t3a_experiments\Experiment_1\Futures' #'../t3a_experiments/Experiment_1/Futures'
excel_data_file_dir:  '\t3a_experiments\Experiment_1\Futures\'
vis_dir: 'Visualizations' # Only changes y you want to change the folder name where save png plots files
dir_main_script_yaml: '..\\config_main_files'
scens: ['BAU', 'LTS']
parameters_reference : [
  'AnnualTechnologyEmissionPenaltyByEmission',
  'CapitalInvestment',
  'OperatingCost',
  'AnnualFixedOperatingCost',
  'AnnualVariableOperatingCost'
]
parameters_news: [
  'Externalities2024',
  'Capex2024',
  'Opex2024',
  'FixedOpex2024',
  'VarOpex2024'
]



# Parameters to script change_default_vals_params.py 

# Parameters do not need in MOMF
parameters_otoole_no_momf: [
  "AnnualTechnologyEmissionByMode",
  "ProductionByTechnologyAnnual",
  "RateOfActivity",
  "RateOfProductionByTechnology",
  "RateOfUseByTechnology",
  "RateOfUseByTechnologyByMode",
  "TotalAnnualTechnologyActivityByMode",
  "TotalTechnologyModelPeriodActivity"
]

# Definition of main characteristics of parameters need in MOMF
new_parameters_add: {
  OperatingCost: {
    indices:
    [REGION, TECHNOLOGY, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
  AnnualTechnologyEmissionPenaltyByEmission: {
    short_name: AnnualTechnologyEmissionPenalty,
    indices:
    [REGION, TECHNOLOGY, EMISSION, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
  AnnualTechnologyEmissionsPenalty: {
    short_name:   AnnualTechnologyEmissionsPenalt,
    indices:
    [REGION, TECHNOLOGY, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
  DiscountedCapitalInvestment: {
    indices:
    [REGION, STORAGE, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
  DiscountedOperatingCost: {
    indices:
    [REGION, TECHNOLOGY, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
  TotalDiscountedCostByTechnology: {
    indices:
    [REGION, TECHNOLOGY, YEAR],
    type: result,
    dtype: float,
    default: 0
  },
}