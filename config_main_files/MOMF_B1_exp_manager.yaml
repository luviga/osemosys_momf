# MOMF Tier 1 B1 (normal and parallel files) build parameterization yaml file

# Note:
# em: for experiment_manager

# Model external dependencies: Directories, Files, sheets and columns
########################################################################################
# Directories
Executables: './Executables' # B1
Executables_2: '.\Executables'
Executables_3: 'Executables'
A1_Inputs: './A1_Inputs/' # B1
A1_Outputs: './A1_Outputs/' # B1
A2_Output_Params: './A2_Output_Params/' # B1
B1_Output_Params: './B1_Output_Params/' # B1
outputs: '/Outputs' # B1, em, FRM
config: 'config\\' # B1
templates: 'templates' # B1
Experi_plat: './Experimental_Platform' # em
Futures: '/Futures/' # em, FRM
futures_2: 'Futures\\' # em, FRM
Futures_3: '\Futures' # em, FRM
Futures_4: 'Futures' # em, FRM
From_Confection: './0_From_Confection/' # em
Base_Model: '1_Baseline_Modelling' # em


# Files, sheets and columns
# B1 script 
# File (First letter of the word y uppercase)
B1_script: 'B1_Base_Scenarios.py' # B1
# OSeMOSYS Model
# File
OSeMOSYS_Model: 'OSeMOSYS_Model.txt' # B1
# Sheets (First letter of the word y uppercase)
Fuel_Code: 'Fuel_to_Code' # B1
Tech_Code: 'Tech_to_Code' # B1
# B1 model structure
# File
B1_model_Struct: 'B1_Model_Structure.xlsx' # B1, em
# GDP REF
# File
GDP_REF: '_GDP_Ref.xlsx' # B1, em
# Sheets
GDP: 'GDP' # B1, em
GDP_Growth: 'GDP_Growth' # B1, em
Elast: 'Elasticities' # em
Inten: 'Intensities' # em
# Pikcle Fleet Groups
# File
Pickle_Fleet_Groups: 'A-O_Fleet_Groups.pickle' # B1, em, FRM
# Pickle Fleet Groups Distance
# File
Pickle_Fleet_Groups_Dist: 'A-O_Fleet_Groups_Distance.pickle' # B1, em, FRM
# Pickle Fleet Groups OR
# File
Pickle_Fleet_Groups_OR: 'A-O_Fleet_Groups_OR.pickle' # B1, em, FRM
# Pickle Fleet Groups T2D
# File
Pickle_Fleet_Groups_T2D: 'A-O_Fleet_Groups_T2D.pickle' # B1, em, FRM
# B1 Scenario Configuration
# File
B1_Scen_Config: 'B1_Scenario_Config.xlsx' # B1
# Sheets
Scens: 'Scenarios' # B1
Over_params: 'Overall_Parameters' # B1
TElas: 'TElasticity' # B1
Dis_Levers: 'Distance_Levers' # B1
Mode_Shift: 'Mode_Shift' # B1
Occu_Rate: 'Occupancy_Rate' # B1
Tech_Adop: 'Tech_Adoption' # B1
Elec: 'Electrical' # B1
Smart_Grid: 'SmartGrid' # B1
Effi: 'Efficiency' # B1
Waste: 'Waste' # B1
# Pickle Blend Shares 0
# File
Blend_Shares_0: 'Blend_Shares_0.pickle'
# Yaml conversion format
# File
conv_format: 'conversion_format.yaml'
# Script to create and change values of the yaml file to use with otoole
# File
otoole_config: change_default_vals_params.py
# Script to concatenate the csvs otoole's outputs
# File
concat_csvs: create_csv_concatenate.py                                                 
# Classifier Modes Transport
# File
Modes_Trans: 'A-I_Classifier_Modes_Transport.xlsx'
# Experiment Manager Script
# File
Manager: 'experiment_manager.py' # em
# FRM Cleanup script
# File
FRM_clean: 'FRM_cleanup.py'
# Pickle GDP dictionary
# File
GDP_dict: 'GDP_dict.pickle'
# Pickle reference driven distance
# File
Ref_Dri_Dist: 'reference_driven_distance.pickle'
# Pickle reference occupancy rate
# File
Ref_Occu_Rate: 'reference_occupancy_rate.pickle'
# Experiment Dictionary
# File
Exper_Dict: 'experiment_dictionary.pickle'
# Uncertainty Table
# File
Uncer_Table: 'Uncertainty_Table.xlsx'
# Broad output dataset creator f
# File 
Bro_out_dat_cre: 'Broad_Output_Dataset_Creator_f.py'
# Output Dataset 0
# File
Out_dat_0: '\output_dataset_0.csv'
# Output Dataset f
# File
Out_dat_f: '\output_dataset_f.csv'
# Input Dataset 0
# File
In_dat_0: '\input_dataset_0.csv'
# Input Dataset f
# File
In_dat_f: '\input_dataset_f.csv'
# OSeMOSYS CR Input
# File
ose_cou_in: 'OSMOSYS_CR_Input'
# OSeMOSYS CR Output
# File
ose_cou_out: 'OSMOSYS_CR_Output'
# Results folder
results: 'Executables\\' # B1
########################################################################################

################################# Variable definitions #################################
# Configuration variables
#----------------------------------------------------------------------------------#
# Start command line
start: 'start cmd.exe /k cd ' # B1, em, FRM

# Solver
solver: 'cplex' # Could you use 'glpk', 'cbc' or 'cplex' # B1, em, FRM

# For GLPK use
glpk_option: 'new' # Could you use 'old' for the first method and 'new' for method with otoole incorporate # B1, em, FRM

# Choose if want to delete or not the solver solutions files
del_files: True # B1, em, FRM

# Maximun cores to use per iteration
Number_of_Runs: 2 # em
Scenario_to_Reproduce: 'All' # em
Initial_Future_to_Print: 1 # em
Final_Future_to_Print: 10 # em
Initial_Year_of_Uncertainty: 2022 # em
Experiment_ID: 1 # em
max_x_per_iter: 2 # B1, em

# Choose if want run script in parallel or not
parallel: True

# Control inputs
is_this_last_update: True # B1, em
generator_or_executor: 'Both' # options: 'None', 'Generator', 'Executor' # B1, em
gen_or_exe_1: 'Generator' # B1, em
gen_or_exe_2: 'Both' # B1, em
gen_or_exe_3: 'Executor' # B1, em
gen_or_exe_4: 'Both' # B1, em
inputs_txt_csv: 'Both' # 'Both', 'csv' # B1, em

# Country
coun_initial: 'CR' # B1

output_csv_r: 0.08 # em

adjust_fre_rai: True # B1

check_assignation: False

ignore_biofuels: True

manipulate_param_keys_2: True # em

initial_year_index: 1 # em

# Number to round
round_#: 4 # B1, em

# Sectors variables
Use_Energy: True # em 
Use_Waste: False # B1, em
Use_Transport: False # B1, em
Use_AFOLU: False # em
Use_PIUP: False # em


Use_Blend_Shares: False # You musn't change # B1, em

# Scenarios
# Only use the three main letters                                 
#--------------------------------------------------------------------------------------------------------------------#
BAU: 'BAU' # B1, em, FRM
NDP: 'NDP' # B1, em, FRM
DDP: 'DDP' # B1, em, FRM
#--------------------------------------------------------------------------------------------------------------------#

# Years variables
#----------------------------------------------------------------------------------#
# Year to apply discount rate
year_apply_discount_rate: 2023 # B1, em
# Base year
base_year: 2021 # em
R_base_year: 'R2021' # em
# R_base_year == R2021 Do not uncommented, this is a variable defined at the script
# r_base_year_max == r2021max Do not uncommented, this is a variable defined at the script
year_first_range: 2018 # B1, em
year_driven_distance: 2019 # B1
year_start_blend_point: 2020 # B1
year_start_blend_point_2: 2026 # B1
year_mid_blend_point: 2021 # B1
year_final_blend_point: 2022 # B1
year_final_blend_point_2: 2030 # B1

# Changed year
change_year: 2024 # B1, em
# driven_distance_change_year == driven_distance_2024 Do not uncommented, this is a variable defined at the script
# index_change_year == index_2024
year_resticcion_tech: 2023 # em
output_csv_year: 2023 # B1, em

# Final year
final_year: 2050 # B1, em
final_year_str: '2050'
R_final_year: 'R2050' # B1, em
v_final_year: 'v_2050' # B1, em
# v_final_year == 'v_2050' Do not uncommented, this is a variable defined at the script
# R_final_year == R2050
# r_final_year == r2050
# float_v_final_year == float_v2050
# the_final_year_value == the_2050_value
# the_final_year_value_raw == the_2050_value_raw
# target_final_year_increment == target_2050_increment
# total_final_year_increment == total_2050_increment

first_decade_year: 2030 # B1
v_first_decade_year: 'v_2030' # B1 
# v_first_decade_year == 'v_2030' Do not uncommented, this is a variable defined at the script
# float_v_first_decade_year == float_v2030

sec_decade_year: 2040 # B1
v_sec_decade_year: 'v_2040' # B1
# v_sec_decade_year == 'v_2040' Do not uncommented, this is a variable defined at the script
# float_v_sec_decade_year == float_v2040
#----------------------------------------------------------------------------------#

# General values
#----------------------------------------------------------------------------------#
default_val_params: { # B1, em, FRM, plot_csvs, change_default_vals_params
  AccumulatedAnnualDemand: 0,
  AnnualEmissionLimit: 99999,
  AnnualExogenousEmission: 0,
  AvailabilityFactor: 1,
  CapacityFactor: 1,
  CapacityOfOneTechnologyUnit: 0,
  CapacityToActivityUnit: 1,
  CapitalCost: 0.0001,
  CapitalCostStorage: 0,
  Conversionld: 0,
  Conversionlh: 0,
  Conversionls: 0,
  DaySplit: 0.00137,
  DaysInDayType: 7,
  DepreciationMethod: 1,
  DiscountRate: 0.05,
  EmissionActivityRatio: 0,
  EmissionsPenalty: 0,
  FixedCost: 0,
  InputActivityRatio: 0,
  MinStorageCharge: 0,
  ModelPeriodEmissionLimit: 99999,
  ModelPeriodExogenousEmission: 0,
  OperationalLife: 1,
  OperationalLifeStorage: 1,
  OutputActivityRatio: 0,
  REMinProductionTarget: 0,
  RETagFuel: 0,
  RETagTechnology: 0,
  ReserveMargin: 0,
  ReserveMarginTagFuel: 0,
  ReserveMarginTagTechnology: 0,
  ResidualCapacity: 0,
  ResidualStorageCapacity: 0,
  SpecifiedAnnualDemand: 0,
  SpecifiedDemandProfile: 0,
  StorageLevelStart: 0,
  StorageMaxChargeRate: 0,
  StorageMaxDischargeRate: 0,
  TechnologyFromStorage: 0,
  TechnologyToStorage: 0,
  TotalAnnualMaxCapacity: 99999,
  TotalAnnualMaxCapacityInvestment: 99999,
  TotalAnnualMinCapacity: 0,
  TotalAnnualMinCapacityInvestment: 0,
  TotalTechnologyAnnualActivityLowerLimit: 0,
  TotalTechnologyAnnualActivityUpperLimit: 99999,
  TotalTechnologyModelPeriodActivityLowerLimit: 0,
  TotalTechnologyModelPeriodActivityUpperLimit: 99999,
  TradeRoute: 0,
  VariableCost: 0.0001,
  YearSplit: 0
  }

params_inputs_data: # B1, em, FRM
  - AccumulatedAnnualDemand
  - AnnualEmissionLimit
  - AnnualExogenousEmission
  #- AvailabilityFactor
  #- CapacityFactor
  - CapacityOfOneTechnologyUnit
  #- CapacityToActivityUnit
  #- CapitalCost
  - CapitalCostStorage
  - Conversionld
  - Conversionlh
  - Conversionls
  - DaySplit
  - DaysInDayType
  - DepreciationMethod
  - DiscountRate
  #- EmissionActivityRatio
  #- EmissionsPenalty
  #- FixedCost
  #- InputActivityRatio
  - MinStorageCharge
  - ModelPeriodEmissionLimit
  - ModelPeriodExogenousEmission
  #- OperationalLife
  - OperationalLifeStorage
  #- OutputActivityRatio
  - REMinProductionTarget
  - RETagFuel
  - RETagTechnology
  - ReserveMargin
  - ReserveMarginTagFuel
  - ReserveMarginTagTechnology
  #- ResidualCapacity
  - ResidualStorageCapacity
  #- SpecifiedAnnualDemand
  #- SpecifiedDemandProfile
  - StorageLevelStart
  - StorageMaxChargeRate
  - StorageMaxDischargeRate
  - TechnologyFromStorage
  - TechnologyToStorage
  #- TotalAnnualMaxCapacity
  #- TotalAnnualMaxCapacityInvestment
  #- TotalAnnualMinCapacity
  #- TotalAnnualMinCapacityInvestment
  #- TotalTechnologyAnnualActivityLowerLimit
  #- TotalTechnologyAnnualActivityUpperLimit
  - TotalTechnologyModelPeriodActivityLowerLimit
  - TotalTechnologyModelPeriodActivityUpperLimit
  - TradeRoute
  #- VariableCost
  #- YearSplit

params_inputs_data_excep_by_scen: { # B1, em, FRM
  BAU: ['TotalAnnualMinCapacity'],
  NDP: []
}                   


sets_otoole: [ # B1, em, FRM
  YEAR,
  TECHNOLOGY,
  TIMESLICE,
  FUEL,
  EMISSION,
  MODE_OF_OPERATION,
  REGION,
  SEASON,
  DAYTYPE,
  DAILYTIMEBRACKET,
  STORAGE
  ]

new_results_otoole: { # B1, em, FRM
  AnnualTechnologyEmissionPenaltyByEmission,
  AnnualTechnologyEmissionsPenalty,
  DiscountedCapitalInvestment,
  DiscountedOperatingCost,
  OperatingCost,
  TotalDiscountedCostByTechnology
}
#----------------------------------------------------------------------------------#

# Data Processor function
#----------------------------------------------------------------------------------#
all_vars: [ # B1, em
  'Demand',
  'NewCapacity',
  'AccumulatedNewCapacity',
  'TotalCapacityAnnual',
  'TotalTechnologyAnnualActivity',
  'ProductionByTechnology',
  'UseByTechnology',
  'CapitalInvestment',
  'DiscountedCapitalInvestment',
  'SalvageValue',
  'DiscountedSalvageValue',
  'OperatingCost',
  'DiscountedOperatingCost',
  'AnnualVariableOperatingCost',
  'AnnualFixedOperatingCost',
  'TotalDiscountedCostByTechnology',
  'TotalDiscountedCost',
  'AnnualTechnologyEmission',
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  'AnnualEmissions'
  ]

more_vars: [ # B1, em
  'DistanceDriven',
  'Fleet',
  'NewFleet',
  'ProducedMobility'
  ]

filter_vars: [ # B1, em
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex${year_apply_discount_rate}', # CapitalInvestment
  'FixedOpex${year_apply_discount_rate}', # AnnualFixedOperatingCost
  'VarOpex${year_apply_discount_rate}', # AnnualVariableOperatingCost
  'Opex${year_apply_discount_rate}', # OperatingCost
  'Externalities${year_apply_discount_rate}', # AnnualTechnologyEmissionPenaltyByEmission
  #
  'Capex_GDP', # CapitalInvestment
  'FixedOpex_GDP', # AnnualFixedOperatingCost
  'VarOpex_GDP', # AnnualVariableOperatingCost
  'Opex_GDP', # OperatingCost
  'Externalities_GDP' # AnnualTechnologyEmissionPenaltyByEmission
  ]

filter_vars_2: [
  'FilterFuelType',
  'FilterVehicleType',
  # 'DiscountedTechnEmissionsPen',
  #
  'Capex${year_apply_discount_rate}', # CapitalInvestment
  'FixedOpex${year_apply_discount_rate}', # AnnualFixedOperatingCost
  'VarOpex${year_apply_discount_rate}', # AnnualVariableOperatingCost
  'Opex${year_apply_discount_rate}', # OperatingCost
  'Externalities${year_apply_discount_rate}' # AnnualTechnologyEmissionPenaltyByEmission
  ]

output_header: ['Strategy', 'Future.ID', 'Fuel', 'Technology', 'Emission', 'Year'] # B1, em, FRM
#----------------------------------------------------------------------------------#

# Function C Mathprog Parallel
#--------------------------------------------------------------------------------------------------------------------#
header_indices: ['Scenario','Parameter','r','t','f','e','m','l','y','ls','ld','lh','s','value'] # B1, em, FRM

basic_header_elements: ['Future.ID', 'Strategy.ID', 'Strategy', 'Fuel', 'Technology', 'Emission', 'Season', 'Year'] # B1, em, FRM

parameters_to_print: [ # B1, em, FRM
  'SpecifiedAnnualDemand',
  'CapacityFactor',
  'OperationalLife',
  'ResidualCapacity',
  'InputActivityRatio',
  'OutputActivityRatio',
  'EmissionActivityRatio',
  'CapitalCost',
  'VariableCost',
  'FixedCost',
  'TotalAnnualMaxCapacity',
  'TotalAnnualMinCapacity',
  'TotalAnnualMaxCapacityInvestment',
  'TotalAnnualMinCapacityInvestment',
  'TotalTechnologyAnnualActivityUpperLimit',
  'TotalTechnologyAnnualActivityLowerLimit'
  ]

more_params: [ # B1, em, FRM
  'DistanceDriven',
  'UnitCapitalCost (USD)',
  'UnitFixedCost (USD)',
  'BiofuelShares'
  ]

filter_params: ['FilterFuelType', 'FilterVehicleType'] # B1, em, FRM
#--------------------------------------------------------------------------------------------------------------------#

# CSV Printer Parallel Function
#--------------------------------------------------------------------------------------------------------------------#
sets: [ # B1
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION',
  'MODE_OF_OPERATION','YEAR','TIMESLICE','SEASON','DAYTYPE',
  'DAILYTIMEBRACKET','STORAGE','Value'
  ]

expand_plants: ['PPPVT', 'PPWNDON', 'PPPVDS']
#--------------------------------------------------------------------------------------------------------------------#

################################# PART 1 #################################
# 1.A Extract the strucute setup of the model based on 'Structure.xlsx'
#--------------------------------------------------------------------------------------------------------------------#

S_DICT_sets_structure: { # B1, em
  set: [],
  initial: [],
  number_of_elements: [],
  elements_list: []
  }

S_DICT_params_structure: { # B1, em
  category: [],
  parameter: [],
  number_of_elements: [],
  index_list: []
  }

S_DICT_vars_structure: { # B1, em
  category: [],
  variable: [],
  number_of_elements: [],
  index_list: []
  }
#--------------------------------------------------------------------------------------------------------------------#

# 1.B Proceed to read all the base scenarios
#--------------------------------------------------------------------------------------------------------------------#
header_row: [ # B1
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','TIMESLICE','YEAR',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#
################################# PART 2 #################################
# 2: Manipulate each scenario for later printing of the .csv files in the same adress
#--------------------------------------------------------------------------------------------------------------------#
capacity_variables: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'] # B1

cost_sets_eliminate: ['TRANOMOTBike', 'TRANOMOTWalk', 'TRANPUB', 'TRANRAILINF', 'TRANRAILCAR'] # B1

set_list_group_dict: { # B1
  Passenger: ['E6TDPASPRI', 'E6TDPASPUB', 'E6TRNOMOT'],
  Freight: ['E6TDFREHEA', 'E6TDFRELIG']
  }

Sets_Involved: [ # B1
  'Techs_He_Freight', 'Techs_Li_Freight', 'Techs_Trains_Freight',
  'Techs_SUVMIV', 'Techs_Sedan', 'Techs_Motos', 'Techs_Buses',
  'Techs_Microbuses', 'Techs_Taxis'
  ]

# Sets_Involved: [ # em
#   'T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI',
#   'T4DSL_PUB', 'T4GSL_LIG', 'T4GSL_PRI',
#   'T4GSL_PUB', 'DIST_GSL'
#   ]

params_to_adjust: [ # B1, EM
  'TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'
  ]

ignore_techs: [ # B1
  'TRANRAILFREINF',  'TRANOMOTWalk', 'TRANOMOTBike', 'TRXTRAIELE',
  'TRXTRAIFREELE', 'TRANRAILINF', 'TRANPUB', 'TRANRAILCAR'
  ]

cap_vars: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'] # B1

parameters_involved: [ # B1
  'CapitalCost','FixedCost','TotalAnnualMaxCapacity',
  'TotalTechnologyAnnualActivityLowerLimit','ResidualCapacity'
  ]

Diesel_Techs: ['T4DSL_HEA', 'T4DSL_LIG', 'T4DSL_PRI', 'T4DSL_PUB'] # B1

Diesel_Techs_Emissions: { # B1
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ] 
  }

Gasoline_Techs: ['T4GSL_LIG', 'T4GSL_PRI', 'T4GSL_PUB', 'DIST_GSL'] # B1

Gasoline_Techs_Emissions: { # B1
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

basic_header_elements: [ # B1
  'Future.ID', 'Strategy.ID', 'Strategy', 'Fuel',
  'Technology', 'Emission', 'Season', 'Year'
  ]

blend_shares: {
  NDP: {},
  NDPA: {},
  NDPB: {},
  NDPC: {},
  NDPD: {},
  NDPE: {},
  NDPF: {},
  NDPG: {},
  NDPAlt: {},
  NDPPlus: {}
  }

each_parameter_header: [
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL',
  'EMISSION','MODE_OF_OPERATION','YEAR','TIMESLICE',
  'SEASON','DAYTYPE','DAILYTIMEBRACKET','STORAGE','Value'
  ]
#--------------------------------------------------------------------------------------------------------------------#

# 2.B Read all the base scenarios
#----------------------------------------------------------------------------------#
header_row_em: [ # em
  'PARAMETER','Scenario','REGION','TECHNOLOGY','FUEL','EMISSION',
  'MODE_OF_OPERATION','TIMESLICE','YEAR','SEASON','DAYTYPE',
  'DAILYTIMEBRACKET','STORAGE','Value'
  ]

Techs_Emissions: { # em
  T4DSL_HEA: [ 'CO2e_Freight', 'CO2e_HeavyCargo', 'CO2e' ],
  T4DSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4DSL_PRI: [ 'CO2e' ],
  T4DSL_PUB: [ 'CO2e' ],
  T4GSL_LIG: [ 'CO2e_Freight', 'CO2e_LightCargo', 'CO2e' ],
  T4GSL_PRI: [ 'CO2e' ],
  T4GSL_PUB: [ 'CO2e' ],
  DIST_GSL: ['CO2e_sources']
  }

except_techs: [ # em
  'Techs_SUVMIV', 'Techs_Sedan', 'Techs_Motos', 'Techs_Buses',
  'Techs_Microbuses', 'Techs_Taxis'
  ]

except_scen: ['NDP'] # em
#----------------------------------------------------------------------------------#

################################# PART 3 #################################
# 3.B Implementing the orderly manipulation
#----------------------------------------------------------------------------------#
Blend_Shares_dict: { # em
  NDP: {},
  NDPTh: {},
  NDPWOS: {},
  NDPWOSTh: {}
  }
#----------------------------------------------------------------------------------#

by_1: ['Strategy','Future.ID','Fuel','Technology','Emission','Year'] # em 
by_2: ['Future.ID','Strategy.ID','Strategy','Fuel','Technology','Emission','Season','Year'] # em
########################################################################################

################################# Conditions #################################
trains: 'Trains' # B1, em
tra_techs_1: ['Techs_Auto', 'Techs_Motos', 'Techs_Buses_Pri', 'Techs_Buses_Pub', 'Techs_Buses_Micro', 'Techs_He_Freight', 'Techs_Li_Freight'] # em
tra_techs_2: ['Techs_Auto', 'Techs_Buses_Pri', 'Techs_Buses_Pub', 'Techs_Buses_Micro'] # em
trn_list: [ # em
  'Techs_Auto', 'Techs_Motos', 'Techs_Buses_Pri',
  'Techs_Buses_Pub', 'Techs_Buses_Micro', 'Techs_Telef',
  'Techs_Trains', 'Techs_Trains_Freight', 'Techs_He_Freight',
  'Techs_Li_Freight'
  ] 
train: 'Train' # B1, em
tech_train: 'Techs_Trains' # B1, em
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost'] # B1, em
this_combina: ['Accidents', 'Health', 'Congestion'] # B1, em
PRI: 'PRI' # B1, em
PUB: 'PUB' # B1, em
FEAHEA: 'FREHEA' # B1, em
FRELIG: 'FRELIG' # B1, em
ini_year_uncer: 'Initial_Year_of_Uncertainty' # B1, em
scen: 'Scenario' # B1, em
group_set: 'Group_Set' # B1, em
interp: 'interp' # B1, em
type: 'Type' # B1, em
techs_var: 'Techs' # You must be careful because 'Techs' is also used as a sheet, but here are diferent parameter name. # B1, em
tech_train_fre: 'Techs_Trains_Freight' # B1, em
tech_he_fre: 'Techs_He_Freight' # B1, em
built_in: 'Built-in' # B1, em
tech_train_ele: 'TRXTRAIELE' # Technologies Trains Electric # B1, em
exact: 'Exact' # B1, em
pass: 'Passenger' # B1, em
fre: 'Freight' # B1, em
tr: 'TR' # B1, em
in: 'IN' # B1, em
min__max: 'Min/Max' # B1, em
min: 'Min' # B1, em
max: 'Max' # B1, em
trans: 'Transport' # B1, em
indus: 'Industry' # B1, em
cap_vars_cond: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityUpperLimit'] # B1, em
cap_vars_cond_2: ['TotalAnnualMaxCapacity', 'TotalTechnologyAnnualActivityLowerLimit'] # B1, em
techs_: 'Techs_' # B1, em
KKT: 'Karush-Kuhn-Tucker' # B1, em
motrocy: 'Motos' # em
param_print: ['TotalAnnualMaxCapacity', 'CapitalCost', 'FixedCost'] # B1, em
down: 'down' # em
up: 'up' # em
exp_param_rel_base: 'Explored_Parameter_is_Relative_to_Baseline' # em
year_when_rea_zero: 'Year_when_reaches_zero' # em
over_dc_shift: 'Overall_DC_Shift' # em
cte: 'Constant' # em
ble_time_series: 'Blend_Time_Series' # em
_base_data: '_Base_Dataset' # em
_backup: '_BACKUP' # em 
exper: 'Experiment' # em
fuel_dem: 'Fuel Demand' # em
pub_tra_dis: 'Public Transport Distribution' # em
techs_motrocy: 'Techs_Motos' # em
techs_sedan: 'Techs_Sedan' # em
techs_taxis: 'Techs_Taxis' # em
techs_bus: 'Techs_Buses' # em
techs_mibus: 'Techs_Microbuses' # em
ini_val: 'Initial_Value' # em
fin_val: 'Final_Value' # em
shift_per_ini_val: 'Shift_as_percent_of_Initial_Value' # em
dis: 'Distance' # em
dem: 'Demand' # em
non_rail: 'Non-Rail' # em
adj_oar: 'Adjustment OAR' # em
acci: 'Accidents' # em
electri: 'Electrification' # em
pen: 'Penetration' # em
this_set_tr_hyd: ['TRBUSHYD', 'TRMBUSHYD', 'TRYTKHYD'] # em
this_set_tra_pas_rai_ele: 'TRNPASRAIELE' # Transport passenger rail electric # em
this_set_waste: ['INORG_RCY_OS', 'COMPOST'] # em
this_set_pp_wdn: 'PP_WND_US' # em
this_set_afolu_1: 'Cafe' # em
this_set_afolu_2: 'Cana' # em
this_set_techs_buses: ['Techs_Buses_Pri', 'Techs_Buses_Pub', 'Techs_Buses_Micro', 'Techs_Trains'] # em
this_set_pp_hy: 'PP_HYDAMARORLAR' # em
TRA_BUS_HYD: 'TRBUSHYD' # em
TRA_BUS_ELE: 'TRBUSELE' # em
TRM_BUS_HYD: 'TRMBUSHYD' # em
TRM_BUS_ELE: 'TRMBUSELE' # em
TRA_PUB_HYD: 'TRBPUHYD' # em
TRA_PUB_ELE: 'TRBPUELE' # em
TRY_TK_HYD: 'TRYTKHYD' # em
TRY_TK_ELE: 'TRYTKELE' # em
TRY_TK_HD: '' # em
PPPVT: 'PPPVT' # em
PPWNDON: 'PPWNDON' # em
PPPVDS: 'PPPVDS' # em
hyd: 'HYD' # em
group_tech: 'Telef' # em
no_orga_recy_org_comp: 'inorgánicos reciclados y orgánicos compostados' # em
water_resi_mana: 'aguas residuales tratadas' # em 
a_fuel_set: 'CLK_PROD' # em

##############################################################################

################################# General Var #################################
newfleet: 'NewFleet' # B1, em
externa_base_year: 'Externalities${year_apply_discount_rate}' # Check with dicts filter_vars and filter_vars_2 # B1, em
externa_gdp: 'Externalities_GDP' # B1, em
capex_base_year: 'Capex${year_apply_discount_rate}' # Check with dicts filter_vars and filter_vars_2 # B1, em
capex_gdp: 'Capex_GDP' # B1, em
fopex_base_year: 'FixedOpex${year_apply_discount_rate}' # Check with dicts filter_vars and filter_vars_2 # B1, em
fopex_gdp: 'FixedOpex_GDP' # B1, em
vopex_base_year: 'VarOpex${year_apply_discount_rate}' # Check with dicts filter_vars and filter_vars_2 # B1, em
vopex_gdp: 'VarOpex_GDP' # B1, em
opex_base_year: 'Opex${year_apply_discount_rate}' # Check with dicts filter_vars and filter_vars_2 # B1, em
opex_gdp: 'Opex_GDP' # B1, em
biofuel_shares: 'BiofuelShares' # B1, em
fleet: 'Fleet' # B1, em
dist_driven: 'DistanceDriven' # B1, em
produced_mob: 'ProducedMobility' # B1, em
filt_fuel_type: 'FilterFuelType' # B1, em
filt_veh_type: 'FilterVehicleType' # B1, em
tech_set: 'Tech_Set' # B1, em
logistic: 'Logistic' # B1, em
linear: 'Linear' # B1, em
context: 'Context' # B1, em
tra_dem_pub: 'E6TDPASPUB' # Transport Demand - Passenger Public # B1, em
tra_dem_pri: 'E6TDPASPRI' # Transport Demand - Passsenger Private # B1, em
tra_dem_hea: 'E6TDFREHEA' # Transport Demand - Heavy Freight # B1, em
tra_dem_med: 'DEMTRNFREMED' # B1, em
tra_dem_lig: 'E6TDFRELIG' # Transport Demand - Light Freight # B1, em
tra_non_mot: 'E6TRNOMOT' # Transport Non Motorize # B1, em
tra_mot_gls: 'TRMOTGSL' # B1, em
cost: 'Cost' # B1, em
inter_escal: 'Interpolate_Escalate' # B1, em
fix_last: 'Fix_Last' # B1, em
intact: 'intact' # B1, em
inter: 'Interpolate' # B1, em
fix_ind: 'Fix_Indicated' # B1, em 
write: 'Write' # B1, em
overwrite: 'Overwrite' # B1, em
exat_mult: 'Exact_Multiplier' # B1, em
copy: 'Copy' # B1, em
uni_capex: 'UnitCapitalCost (USD)' # em
uni_fopex: 'UnitFixedCost (USD)' # em
num_runs: 'Number_of_Runs' # em
xlrm_id: 'XLRM_ID' # em
x_math__type: 'X_Mathematical_Type' # em
exp_param_x: 'Explored_Parameter_of_X' # em
inv_scen: 'Involved_Scenarios' # em
inv_sets_ose: 'Involved_Sets_in_Osemosys' # em
exac_param_inv_ose: 'Exact_Parameters_Involved_in_Osemosys' # em
x_pla_eng_desc: 'X_Plain_English_Description' # em
x_num: 'X_Num' # em
x_cat_col_name: 'X_Category' # em
x_cat_emi_wat_ind: ['Emisiones por aguas residuales industriales'] # em
x_cat_na_waste_pro: 'National waste production' # em
x_cat_list: ['Electrical Demand', 'Fuel Demand', 'Freight Demand'] # em
pass_dem: 'Passenger Demand' # em
fre_dem: 'Freight Demand'  # em
ele_dem: 'Electrical Demand' # em
x_cat_ele: ['Electrical Demand'] # em
x_cat_afolu_list: ['Agricultural Demand', 'Agricultural Yield', 'Agricultural Yield Livestock'] # em
x_cat_afolu_1: 'Agricultural Demand' # em
x_cat_afolu_2: 'Agricultural Yield Livestock' # em
x_cat_afolu_3: 'Agricultural Yield' # em
x_cat_afolu_4: 'ForestCover' # em
x_cat_piup: 'Adjustment clinker factor' # em
x_cat_electri: 'Electrification' # em
x_cat_pen: 'Penetration' # em
x_cat_electri_priv_tra: 'Electrification of Private Transport' # em
x_cat_rail_dem: 'Rail Demand' # em
x_cat_mode_shift: 'Mode Shift' # em
x_cat_bev_cost: 'Unit BEV Cost' # em
exp_param_num: 'Explored_Parameter_Number' # em
min_val: 'Min_Value' # em
max_val: 'Max_Value' # em
dep_pre_exp_param: 'Dependency_on_Previous_Explored_Parameter' # em
sing_dep_spe_xs: 'Sign_Dependency_on_Specified_Xs' # em
fut_var: 'Futures' # em
exact_x: 'Exact_X' # em
exact_x_2: 'EXPLICIT' # em
Cat: 'Category' # em
math_type: 'Math_Type' # em
math_type_mult_rest: 'Mult_Restriction' # em
math_type_start: 'Start' # em
math_type_end: 'End' # em
math_type_curves_list: ['Adoption_Curve', 'Mult_Adoption_Curve'] # em
math_type_dis_inv: 'Discrete_Investments' # em
math_type_cte: 'Constant' # em
math_type_blend: 'Blend_Time_Series' # em
math_type_dis_invs: 'Discrete_Investments' # em
math_type_time_series: 'Time_Series' # em
math_type_adop_curve: 'Adoption_Curve' # em
math_type_multi_adop_curve: 'Mult_Adoption_Curve' # em
math_type_list_types: ['Time_Series', 'Discrete_Investments', 'Mult_Adoption_Curve', 'Mult_Restriction', 'Mult_Restriction_Start', 'Mult_Restriction_End'] # em
math_type_list_mult: ['Mult_Adoption_Curve', 'Mult_Restriction', 'Mult_Restriction_Start', 'Mult_Restriction_End'] # em
ini_year: 'Initial_Year' # em
rel_base: 'Relative_to_Baseline' # em
e_pass: 'e_Passenger' # em
e_fre: 'e_Freight' # em
i_nt_ele: 'i_NT_elec' # em
i_nt_fossil: 'i_NT_fossil' # em
columns: {Run.ID: 'Strategy'} # em
valid_column_names: [ # em
  "Strategy",
  "Future.ID",
  "Fuel",
  "Technology",
  "Emission",
  "Year",
  "Demand",
  "NewCapacity",
  "AccumulatedNewCapacity",
  "TotalCapacityAnnual",
  "TotalTechnologyAnnualActivity",
  "ProductionByTechnology",
  "UseByTechnology",
  "CapitalInvestment",
  "DiscountedCapitalInvestment",
  "SalvageValue",
  "DiscountedSalvageValue",
  "OperatingCost",
  "DiscountedOperatingCost",
  "AnnualVariableOperatingCost",
  "AnnualFixedOperatingCost",
  "TotalDiscountedCostByTechnology",
  "TotalDiscountedCost",
  "AnnualTechnologyEmission",
  'AnnualTechnologyEmissionPenaltyByEmission',
  'AnnualTechnologyEmissionsPenalty',
  'DiscountedTechnologyEmissionsPenalty',
  "AnnualEmissions",
  "Capex${year_apply_discount_rate}",
  'FixedOpex${year_apply_discount_rate}',
  "VarOpex${year_apply_discount_rate}",
  "Opex${year_apply_discount_rate}",
  'Externalities${year_apply_discount_rate}',
  "Capex_GDP",
  "FixedOpex_GDP",
  "VarOpex_GDP",
  "Opex_GDP",
  'Externalities_GDP'
  ]

common_complement: [
'LANDFILL', 'NO_CONTR_OD', 'OPEN_BURN', 'SIT_CLAN', 'NO_OSS_BLEND',
'NO_OSS_NO_COLL', 'BLEND_NO_DCOLL', 'BLEND_NO_COLL', 'NO_SS']

common_complement_2: [
  #'WWWOT', 'WWWT', 'SEWERWWWOT', 'TWWWOT',
  #'SEWERWW', 'STWW']
  'LATR', 'EFLT_DISC',
  'WWWOT', 'DIRECT_DISC']
  # , 'AERO_PTAR', 'SEPT_SYST', 'WWWT', 'SEWERWW']

# Variables this_parameter... are list with parameters of OSeMOSYS
this_parameter: ['SpecifiedAnnualDemand'] # em

this_parameter_2: ['TotalTechnologyAnnualActivityLowerLimit','TotalTechnologyAnnualActivityUpperLimit'] # em

this_parameter_3: ['CapitalCost'] # em

this_parameter_4: ['VariableCost'] # em

this_parameter_5: ['VariableCost','TotalTechnologyAnnualActivityLowerLimit','TotalTechnologyAnnualActivityUpperLimit'] # em

this_parameter_6: ['TotalTechnologyAnnualActivityUpperLimit', 'TotalTechnologyAnnualActivityLowerLimit'] # em

this_parameter_7: ['OutputActivityRatio'] # em

adjust_sets: [
  'INORG_RCY_COLL', 'INORG_RCY_OS', 'AD', 'COMPOST', 'OTH_ORG_TEC', 'LANDFILL_BG', 'LANDFILL', 'CONTR_OD',
  'NO_CONTR_OD', 'WWWOT', 'WWWT', 'WFIRU', 'OSS_INORG', 'OSS_ORG', 'NO_OSS_INORG', 'NO_OSS_ORG', 'NO_OSS_BLEND',
  'INORG_DCOLL', 'ORG_DCOLL', 'INORG_NO_DCOLL', 'ORG_NO_DCOLL', 'BLEND_NO_DCOLL', 'INORG_SS', 'ORG_SS', 'NO_SS',
  'SEWERWWWOT', 'SEWERWWWT', 'WWWTFIRU', 'TWWWOT', 'SEWERWW', 'STWW'
  ]

adjust_sets_2: [
  'LANDFILL', 'OPEN_BURN', 'SIT_CLAN', 'NO_OSS_NO_COLL', 'BLEND_NO_COLL', 'ORG_DCOLL', 'INORG_DCOLL', 'NO_OSS_BLEND', 'INORG_SS', 'OSS_ORG', 'NO_SS',
  'ORG_SS', 'BLEND_NO_DCOLL', 'OSS_INORG', 'INORG_RCY_OS',
  'NO_CONTR_OD', 'COMPOST', 'AERO_PTAR', 'SEPT_SYST', 'LATR', 'EFLT_DISC', 'WWWT', 'WWWOT', 'SEWERWW', 'DIRECT_DISC'
  ]

all_covers: [
  "Banano", "Arroz", "Cacao", "Cafe", "Cana", "Maiz", "Palma",
  "Soya", "Palmito", "Legumbres", "Cereales", "Tuberculos",
  "Fruta", "Verduras", "Floricolas", "Otros_cultivos", "Pastizales",
  "Humedal", "Zona_atropica", "Otras_tierras", "Bosque_nativo_protegido",
  "Bosque_nativo_sinproteger", "Plantacion_forestal", "Pasturas"
  ]

all_covers_2: [
  "Avicola",
  "Azucar",
  "Banano",
  "Bovina",
  "Cafe",
  "Cardamomo",
  "Conifero_adulto",
  "Conifero_nuevo",
  "Frijol",
  "Huevos",
  "Hule",
  "Latifoleado_adulto",
  "Latifoleado_nuevo",
  "Leche",
  "Maiz",
  "Manglar_adulto",
  "Manglar_nuevo",
  "Matorrales",
  "Mixto_adulto",
  "Mixto_nuevo",
  "Otras_coberturas",
  "Otras_coberturas_pastos",
  "Otros_adulto",
  "Otros_cultivos",
  "Otros_joven",
  "Palma",
  "Porcina",
  "Suelos_productivos",
  "Urbano",
  "plantacion_forestal_conifero",
  "plantacion_forestal_latifoleado"
]

group_tech_set: 'Techs_Auto'

exception_list_TRAN: ['TRBPUHYD', 'TRYTKHYD'] # em
special_list_dict_TRAN: {TRYTKHYD: ['TRYTKELE', 'TRYTKHYD']} # em
##############################################################################

# Parameters to script create_csv_concatenate.py
# First: Select model
model: 'MOMF' # two options: 'MOMF' or 'BULAC'

# If model is MOMF, select what tier use
tier: '3a' # two options: '1' or '3a'

# Second: Select folders
tier1_dir: '\\t1_confection\\Executables' # Don't change
tier3a_dir: '..\\t3a_experiments\\Experiment_1\\Futures' #'../t3a_experiments/Experiment_1/Futures'
excel_data_file_dir:  '..\\t3a_experiments\\Experiment_1\\Futures\\'
vis_dir: 'Visualizations' # Only changes y you want to change the folder name where save png plots files
# out_dir: '/Outputs' # Don't change
dir_main_script_yaml: '..\\config_main_files'
scens: ['BAU', 'NDP']